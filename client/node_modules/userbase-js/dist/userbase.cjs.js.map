{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"base64-arraybuffer\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"uuid/v4\"","webpack:///external \"lz-string\"","webpack:///external \"diffie-hellman\"","webpack:///external \"scrypt-js\"","webpack:///external \"sorted-array\"","webpack:///./src/statusCodes.js","webpack:///./src/errors/auth.js","webpack:///./src/errors/db.js","webpack:///./src/errors/config.js","webpack:///./src/errors/payments.js","webpack:///./src/errors/index.js","webpack:///./src/config.js","webpack:///./src/api/auth.js","webpack:///./src/api/index.js","webpack:///./src/localData.js","webpack:///./src/Crypto/utils.js","webpack:///./src/Crypto/sha-256.js","webpack:///./src/Crypto/hkdf.js","webpack:///./src/Crypto/aes-gcm.js","webpack:///./src/Crypto/diffie-hellman.js","webpack:///./src/Crypto/hmac.js","webpack:///./src/Crypto/scrypt.js","webpack:///./src/Crypto/index.js","webpack:///./src/utils.js","webpack:///./src/ws.js","webpack:///./src/auth.js","webpack:///./src/db.js","webpack:///./src/payments.js","webpack:///./src/index.js"],"names":["UsernameAlreadyExists","Error","constructor","params","name","message","status","statusCodes","UsernameMissing","UsernameCannotBeBlank","UsernameTooLong","maxLen","UsernameMustBeString","PasswordMissing","PasswordCannotBeBlank","PasswordTooShort","minLen","PasswordTooLong","PasswordMustBeString","PasswordAttemptLimitExceeded","delay","UsernameOrPasswordMismatch","UserAlreadySignedIn","username","UserPendingDeletion","AppIdNotValid","UserNotSignedIn","UserNotFound","UserEmailNotFound","EmailNotValid","ProfileMustBeObject","ProfileCannotBeEmpty","ProfileHasTooManyKeys","maxKeys","ProfileKeyTooLong","key","ProfileValueMustBeString","value","ProfileValueCannotBeBlank","ProfileValueTooLong","RememberMeValueNotValid","options","JSON","stringify","Object","keys","ParamsMissing","TrialExceededLimit","CurrentPasswordMissing","CurrentPasswordIncorrect","KeyNotFound","DatabaseNameMissing","DatabaseNameCannotBeBlank","DatabaseNameMustBeString","DatabaseNameTooLong","maxLength","DatabaseAlreadyOpening","ChangeHandlerMissing","ChangeHandlerMustBeFunction","DatabaseNotOpen","ItemMissing","ItemInvalid","ItemTooLarge","maxKb","ItemIdMustBeString","ItemIdTooLong","ItemIdMissing","ItemIdCannotBeBlank","ItemAlreadyExists","ItemDoesNotExist","ItemUpdateConflict","OperationsMissing","OperationsMustBeArray","CommandNotRecognized","command","OperationsConflict","OperationsExceedLimit","limit","AppIdAlreadySet","appId","AppIdMustBeString","AppIdMissing","AppIdCannotBeBlank","WebCryptoUnavailable","SuccessUrlMissing","SuccessUrlMustBeString","SuccessUrlInvalid","invalidProtocol","CancelUrlMissing","CancelUrlMustBeString","CancelUrlInvalid","StripeJsLibraryMissing","PaymentsDisabled","SubscriptionPlanNotSet","SubscriptionPlanAlreadyPurchased","StripeAccountNotConnected","SubscriptionNotFound","SubscribedToIncorrectPlan","SubscriptionInactive","subscriptionStatus","SubscriptionNotPurchased","SubscriptionAlreadyCanceled","TrialExpired","StripeError","error","type","AppIdNotSet","ServiceUnavailable","InternalServerError","Timeout","Reconnecting","UnknownServiceUnavailable","e","console","ParamsMustBeObject","TooManyRequests","retryDelay","retryDelaySeconds","Math","floor","auth","db","config","payments","VERSION","DEFAULT_ENDPOINT","STRIPE_PRODUCTION_PUBLISHABLE_KEY","STRIPE_TEST_PUBLISHABLE_KEY","userbaseAppId","REMEMBER_ME_OPTIONS","local","session","none","getAppId","errors","getEndpoint","window","_userbaseEndpoint","setAppId","length","configure","getStripePublishableKey","isProduction","_USERBASE_STRIPE_PRODUCTION_PUBLISHABLE_KEY","_USERBASE_STRIPE_TEST_PUBLISHABLE_KEY","TEN_SECONDS_MS","RequestError","data","statusText","response","TimeoutError","timeout","handleResponse","xhr","resolve","reject","parse","processXhr","onload","onerror","ontimeout","signUp","passwordToken","publicKey","passwordSalts","keySalts","email","profile","passwordBasedBackup","Promise","XMLHttpRequest","method","url","open","setRequestHeader","send","getPasswordSalts","encodeURIComponent","signIn","signInWithSession","sessionId","getServerPublicKey","responseType","tryCatchWrapper","func","args","warn","_getSeedName","setCurrentSession","rememberMe","signedIn","creationDate","expirationDate","sessionString","localStorage","setItem","sessionStorage","getCurrentSession","sessionStorageCurrentSessionString","getItem","currentSession","localCurrentSessionString","localCurrentSession","localSessionString","saveSeedString","seedString","removeSeedString","seedName","removeItem","getSeedString","signInSession","signOutSession","removeCurrentSession","ONE_KB","TEN_KB","arrayBufferToString","buf","bufView","Uint16Array","result","chunkSize","i","chunk","subarray","String","fromCharCode","apply","stringToArrayBuffer","str","ArrayBuffer","strLen","charCodeAt","appendBuffer","buffer1","buffer2","tmp","Uint8Array","byteLength","set","buffer","appendBuffers","buffers","bufferByteLengths","map","totalByteLength","reduce","byteLengthSum","bufferByteLength","currentByteLength","byteLengths","hexStringToArrayBuffer","hexString","halfHexStringLen","array","byteStartIndex","byte","substring","byteAsInt","parseInt","push","BYTE_SIZE","HASH_ALGORITHM_NAME","hash","crypto","subtle","digest","hashBase64String","dataString","base64","decode","encode","hashString","HKDF_ALGORITHM_NAME","RAW_KEY_TYPE","KEY_IS_NOT_EXTRACTABLE","KEY_WILL_BE_USED_TO","importHkdfKeyFromString","seed","hkdfKey","importHkdfKey","importKey","SALT_BYTE_SIZE","sha256","generateSalt","getRandomValues","getParams","keyName","salt","info","PASSWORD_TOKEN_NAME","PASSWORD_TOKEN_NUM_BITS","getPasswordToken","passwordTokenBits","deriveBits","ENCRYPTION_ALGORITHM_NAME","BIT_SIZE","KEY_IS_EXTRACTABLE","ENCRYPTION_KEY_NAME","PASSWORD_BASED_ENCRYPTION_KEY","RECOMMENDED_IV_BYTE_SIZE","RECOMMENDED_AUTHENTICATION_TAG_LENGTH","windowOrSelfObject","self","getEncryptionKeyParams","importKeyFromMaster","masterKey","encryptionKey","deriveKey","hkdf","generateKey","getKeyStringFromKey","rawKey","exportKey","keyString","getKeyFromKeyString","getKeyFromRawKey","getRawKeyFromKey","encrypt","plaintext","iv","ciphertextArrayBuffer","tagLength","encryptJson","plaintextJson","plaintextString","encrypted","encryptString","plaintextArrayBuffer","decrypt","ivStartIndex","slice","decryptJson","encryptedJsonString","decryptString","encryptedString","encryptedArrayBuffer","getPasswordBasedEncryptionKey","DIFFIE_HELLMAN_KEY_NAME","PRIME","GENERATOR","serverPublicKey","api","setPrivateKeyAndGenerateKeys","diffieHellman","privateKey","setPrivateKey","generateKeys","createDiffieHellman","DH","getSharedKey","otherPublicKey","sharedSecret","computeSecret","sharedRawKey","sharedKey","aesGcm","getPublicKey","getSharedKeyWithServer","rawPrivateKey","HMAC_KEY_NAME","ALGORITHM_NAME","hmacKey","sign","signString","N","r","p","HASH_LENGTH","SALT_LENGTH","passwordString","passwordArrayBuffer","passwordHash","scrypt","SEED_BYTE_SIZE","generateSeed","hmac","readArrayBufferAsString","arrayBuffer","reader","FileReader","readAsText","Blob","removeProtocolFromEndpoint","endpoint","http","https","getProtocolFromEndpoint","split","getWsUrl","host","protocol","byteSizeOfString","string","objectHasOwnProperty","object","property","prototype","hasOwnProperty","call","Queue","queue","offset","getLength","isEmpty","enqueue","item","dequeue","peek","wsAlreadyConnected","BACKOFF_RETRY_DELAY","MAX_RETRY_DELAY","clientId","uuidv4","RequestFailed","action","WebSocketError","Connection","init","resolveConnection","rejectConnection","state","pingTimeout","clearTimeout","ws","connected","connectionResolved","authToken","salts","userData","stripeData","requests","databases","dbIdToHash","dbNameToHash","connect","reconnectDelay","timeoutToOpenWebSocket","setTimeout","reconnecting","WebSocket","onopen","onmessage","route","heartbeat","encryptedValidationMessage","setKeys","dbId","dbNameHash","database","applyTransactionsQueue","startApplyingThisBatchOfTransactions","openingDatabase","dbKey","dbKeyString","bundle","bundleSeqNo","base64Bundle","compressedString","LZString","decompress","applyBundle","newTransactions","transactionLog","applyTransactions","receivedMessage","buildBundle","startApplyingNextBatchInQueue","requestId","request","promiseResolve","promiseReject","successfulResponse","log","close","onclose","serviceRestart","code","clientDisconnected","attemptToReconnect","wasClean","reconnect","reconnected","currentState","min","dbsToReopen","reopenDatabases","openDatabasePromises","reopenAtSeqNo","lastSeqNo","all","LATENCY_BUFFER","signOut","localData","encryptionKeySalt","dhPrivateKey","dhKeySalt","hmacKeySalt","validateKey","validationMessage","responseWatcher","watch","items","itemsIndex","itemKeyPromises","itemId","itemKeys","compress","seqNo","MAX_PASSWORD_CHAR_LENGTH","MIN_PASSWORD_CHAR_LENGTH","_parseGenericErrors","indexOf","_connectWebSocket","_parseGenericUsernamePasswordError","_parseUserResponseError","_validateUsername","_validatePassword","password","_validateSignUpOrSignInInput","_generatePasswordToken","passwordSalt","passwordHkdfKey","passwordTokenSalt","passwordBasedEncryptionKeySalt","passwordBasedEncryptionKey","passwordEncryptedSeed","_generateKeysAndSignUp","_buildUserResult","userId","protectedProfile","usedTempPassword","paymentsMode","cancelSubscriptionAt","trialExpirationDate","_validateProfile","keyExists","_validateSignUpInput","toLowerCase","_getSeedStringFromPasswordBasedBackup","seedFromBackup","seedStringFromBackup","_signInWrapper","apiSignInResult","_getPasswordSaltsOverRestEndpoint","_getPasswordSaltsOverWebSocket","passwordSaltsResponse","_rebuildPasswordToken","savedSeedString","Date","lastUsedUsername","apiSignInWithSessionResult","user","_validateUpdatedUserInput","currentPassword","newPassword","_buildUpdateUserParams","currentPasswordSalts","newPasswordPromise","currentPasswordToken","updateUser","startingSeedString","finalParams","deleteUser","forgotPassword","keyNotFoundMessage","forgotPasswordWs","encryptedForgotPasswordToken","forgotPasswordToken","success","MAX_DB_NAME_CHAR_LENGTH","MAX_ITEM_ID_CHAR_LENGTH","MAX_ITEM_KB","MAX_ITEM_BYTES","UnverifiedTransaction","startSeqNo","txSeqNo","transactions","index","getStartSeqNo","getIndex","setIndex","getResult","promise","verifyPromise","addTransaction","transaction","Database","changeHandler","onChange","compareItems","a","b","operationIndex","SortedArray","unverifiedTransactions","transactionCode","applyTransaction","j","getItems","itemIndex","insert","record","id","validateInsert","applyInsert","__v","validateUpdateOrDelete","applyUpdate","applyDelete","batch","operations","recordPromises","operation","records","validateBatchTransaction","applyBatchTransaction","currentVersion","getItemVersionNumber","itemExists","remove","uniqueItemIds","registerUnverifiedTransaction","unverifiedTransaction","unregisterUnverifiedTransaction","pendingTransaction","_openDatabase","newDatabaseParams","firstMessageFromWebSocket","currentReceivedMessage","_createDatabase","dbName","encryptedDbKey","encryptedDbName","_validateDbInput","databaseName","openDatabase","getOpenDb","insertItem","insertParams","_buildInsertParams","postTransaction","itemString","itemKey","itemRecord","encryptedItem","updateItem","updateParams","_buildUpdateParams","deleteItem","deleteParams","_buildDeleteParams","putTransaction","Array","isArray","operationParamsPromises","operationParamsPromiseResults","operationParams","pendingTx","paramsWithDbData","sequenceNo","_buildDatabaseResult","getDatabases","databasesResponse","databaseResults","nextPageToken","includes","_validatePurchaseOrUpdate","stripeAccountId","successUrl","successUrlProtocol","cancelUrl","cancelUrlProtocol","purchaseSubscription","sessionIdResponse","stripeSessionId","stripePk","Stripe","stripeAccount","redirectToCheckout","_validateModifySubscriptionConditions","cancelSubscription","cancelResponse","cancelAt","resumeSubscription","updatePaymentMethod"],"mappings":"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","file":"userbase.cjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = require(\"base64-arraybuffer\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"uuid/v4\");","module.exports = require(\"lz-string\");","module.exports = require(\"diffie-hellman\");","module.exports = require(\"scrypt-js\");","module.exports = require(\"sorted-array\");","export default {\n  'Success': 200,\n\n  'Bad Request': 400,\n  'Unauthorized': 401,\n  'Payment Required': 402,\n  'Forbidden': 403,\n  'Not Found': 404,\n  'Conflict': 409,\n  'Too Many Requests': 429,\n\n  'Internal Server Error': 500,\n  'Service Unavailable': 503,\n  'Gateway Timeout': 504,\n\n  // WebSocket close event codes\n  'Service Restart': 1012,\n\n  // Custom ws close event codes\n  'No Pong Received': 3000,\n  'Client Already Connected': 3001\n}\n","import statusCodes from '../statusCodes'\n\nclass UsernameAlreadyExists extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'UsernameAlreadyExists'\n    this.message = 'Username already exists.'\n    this.status = statusCodes['Conflict']\n  }\n}\n\nclass UsernameMissing extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'UsernameMissing'\n    this.message = 'Username missing.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass UsernameCannotBeBlank extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'UsernameCannotBeBlank'\n    this.message = 'Username cannot be blank.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass UsernameTooLong extends Error {\n  constructor(maxLen, ...params) {\n    super(maxLen, ...params)\n\n    this.name = 'UsernameTooLong'\n    this.message = `Username too long. Must be a max of ${maxLen} characters.`\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass UsernameMustBeString extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'UsernameMustBeString'\n    this.message = 'Username must be a string.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass PasswordMissing extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'PasswordMissing'\n    this.message = 'Password missing.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass PasswordCannotBeBlank extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'PasswordCannotBeBlank'\n    this.message = 'Password cannot be blank.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass PasswordTooShort extends Error {\n  constructor(minLen, ...params) {\n    super(minLen, ...params)\n\n    this.name = 'PasswordTooShort'\n    this.message = `Password too short. Must be a minimum of ${minLen} characters.`\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass PasswordTooLong extends Error {\n  constructor(maxLen, ...params) {\n    super(maxLen, ...params)\n\n    this.name = 'PasswordTooLong'\n    this.message = `Password too long. Must be a max of ${maxLen} characters.`\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass PasswordMustBeString extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'PasswordMustBeString'\n    this.message = 'Password must be a string.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass PasswordAttemptLimitExceeded extends Error {\n  constructor(delay, ...params) {\n    super(delay, ...params)\n\n    this.name = 'PasswordAttemptLimitExceeded'\n    this.message = `Password attempt limit exceeded. Must wait ${delay} to attempt to use password again.`\n    this.status = statusCodes['Unauthorized']\n  }\n}\n\nclass UsernameOrPasswordMismatch extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'UsernameOrPasswordMismatch'\n    this.message = 'Username or password mismatch.'\n    this.status = statusCodes['Unauthorized']\n  }\n}\n\nclass UserAlreadySignedIn extends Error {\n  constructor(username, ...params) {\n    super(...params)\n\n    this.name = 'UserAlreadySignedIn'\n    this.message = 'Already signed in.'\n    this.status = statusCodes['Bad Request']\n    this.username = username\n  }\n}\n\nclass UserPendingDeletion extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'UserPendingDeletion'\n    this.message = 'User is pending deletion.'\n    this.status = statusCodes['Forbidden']\n  }\n}\n\nclass AppIdNotValid extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'AppIdNotValid'\n    this.message = 'App ID not valid.'\n    this.status = statusCodes['Unauthorized']\n  }\n}\n\nclass UserNotSignedIn extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'UserNotSignedIn'\n    this.message = 'Not signed in.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass UserNotFound extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'UserNotFound'\n    this.message = 'User not found.'\n    this.status = statusCodes['Not Found']\n  }\n}\n\nclass UserEmailNotFound extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'UserEmailNotFound'\n    this.message = 'User does not have an email saved.'\n    this.status = statusCodes['Not Found']\n  }\n}\n\nclass EmailNotValid extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'EmailNotValid'\n    this.message = 'Email not valid.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass ProfileMustBeObject extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'ProfileMustBeObject'\n    this.message = 'Profile must be a flat JSON object.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass ProfileCannotBeEmpty extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'ProfileCannotBeEmpty'\n    this.message = 'Profile cannot be empty.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass ProfileHasTooManyKeys extends Error {\n  constructor(maxKeys, ...params) {\n    super(maxKeys, ...params)\n\n    this.name = 'ProfileHasTooManyKeys'\n    this.message = `Profile has too many keys. Must have a max of ${maxKeys} keys.`\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass ProfileKeyTooLong extends Error {\n  constructor(maxLen, key, ...params) {\n    super(maxLen, key, ...params)\n\n    this.name = 'ProfileKeyTooLong'\n    this.message = `Profile key too long. Must be a max of ${maxLen} characters.`\n    this.status = statusCodes['Bad Request']\n    this.key = key\n  }\n}\n\nclass ProfileValueMustBeString extends Error {\n  constructor(key, value, ...params) {\n    super(key, value, ...params)\n\n    this.name = 'ProfileValueMustBeString'\n    this.message = 'Profile value must be a string.'\n    this.status = statusCodes['Bad Request']\n    this.key = key\n    this.value = value\n  }\n}\n\nclass ProfileValueCannotBeBlank extends Error {\n  constructor(key, ...params) {\n    super(key, ...params)\n\n    this.name = 'ProfileValueCannotBeBlank'\n    this.message = 'Profile value cannot be blank.'\n    this.status = statusCodes['Bad Request']\n    this.key = key\n  }\n}\n\nclass ProfileValueTooLong extends Error {\n  constructor(maxLen, key, value, ...params) {\n    super(maxLen, key, value, ...params)\n\n    this.name = 'ProfileValueTooLong'\n    this.message = `Profile value too long. Must be a max of ${maxLen} characters.`\n    this.status = statusCodes['Bad Request']\n    this.key = key\n    this.value = value\n  }\n}\n\nclass RememberMeValueNotValid extends Error {\n  constructor(options, ...params) {\n    super(options, ...params)\n\n    this.name = 'RememberMeValueNotValid'\n    this.message = `Remember me value must be one of ${JSON.stringify(Object.keys(options))}.`\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass ParamsMissing extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'ParamsMissing'\n    this.message = 'Parameters expected are missing.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass TrialExceededLimit extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'TrialExceededLimit'\n    this.message = 'Trial exceeded limit of users.'\n    this.status = statusCodes['Payment Required']\n  }\n}\n\nclass CurrentPasswordMissing extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'CurrentPasswordMissing'\n    this.message = 'Current password missing.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass CurrentPasswordIncorrect extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'CurrentPasswordIncorrect'\n    this.message = 'Current password is incorrect.'\n    this.status = statusCodes['Unauthorized']\n  }\n}\n\nclass KeyNotFound extends Error {\n  constructor(message, ...params) {\n    super(message, ...params)\n\n    this.name = 'KeyNotFound'\n    this.message = message\n    this.status = statusCodes['Not Found']\n  }\n}\n\nexport default {\n  UsernameAlreadyExists,\n  UsernameMissing,\n  UsernameCannotBeBlank,\n  UsernameTooLong,\n  UsernameMustBeString,\n  PasswordMissing,\n  PasswordCannotBeBlank,\n  PasswordTooShort,\n  PasswordTooLong,\n  PasswordMustBeString,\n  PasswordAttemptLimitExceeded,\n  UsernameOrPasswordMismatch,\n  UserAlreadySignedIn,\n  UserPendingDeletion,\n  AppIdNotValid,\n  UserNotSignedIn,\n  UserNotFound,\n  UserEmailNotFound,\n  EmailNotValid,\n  ProfileMustBeObject,\n  ProfileCannotBeEmpty,\n  ProfileHasTooManyKeys,\n  ProfileKeyTooLong,\n  ProfileValueMustBeString,\n  ProfileValueCannotBeBlank,\n  ProfileValueTooLong,\n  RememberMeValueNotValid,\n  ParamsMissing,\n  TrialExceededLimit,\n  CurrentPasswordMissing,\n  CurrentPasswordIncorrect,\n  KeyNotFound,\n}\n","import statusCodes from '../statusCodes'\n\nclass DatabaseNameMissing extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'DatabaseNameMissing'\n    this.message = 'Database name missing.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass DatabaseNameCannotBeBlank extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'DatabaseNameCannotBeBlank'\n    this.message = 'Database name cannot be blank.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass DatabaseNameMustBeString extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'DatabaseNameMustBeString'\n    this.message = 'Database name must be a string.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass DatabaseNameTooLong extends Error {\n  constructor(maxLength, ...params) {\n    super(maxLength, ...params)\n\n    this.name = 'DatabaseNameTooLong'\n    this.message = `Database name cannot be more than ${maxLength} characters.`\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass DatabaseAlreadyOpening extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'DatabaseAlreadyOpening'\n    this.message = 'Already attempting to open database.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass ChangeHandlerMissing extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'ChangeHandlerMissing'\n    this.message = 'Change handler missing.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass ChangeHandlerMustBeFunction extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'ChangeHandlerMustBeFunction'\n    this.message = 'Change handler must be a function.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass DatabaseNotOpen extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'DatabaseNotOpen'\n    this.message = 'Database is not open.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass ItemMissing extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'ItemMissing'\n    this.message = 'Item missing.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass ItemInvalid extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'ItemInvalid'\n    this.message = 'Item must be serializable to JSON.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass ItemTooLarge extends Error {\n  constructor(maxKb, ...params) {\n    super(maxKb, ...params)\n\n    this.name = 'ItemTooLarge'\n    this.message = `Item must be less than ${maxKb} KB.`\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass ItemIdMustBeString extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'ItemIdMustBeString'\n    this.message = 'Item id must be a string.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass ItemIdTooLong extends Error {\n  constructor(maxLength, ...params) {\n    super(maxLength, ...params)\n\n    this.name = 'ItemIdTooLong'\n    this.message = `Item id cannot be more than ${maxLength} characters.`\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass ItemIdMissing extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'ItemIdMissing'\n    this.message = 'Item id missing.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass ItemIdCannotBeBlank extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'ItemIdCannotBeBlank'\n    this.message = 'Item id cannot be blank.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass ItemAlreadyExists extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'ItemAlreadyExists'\n    this.message = 'Item with the same id already exists.'\n    this.status = statusCodes['Conflict']\n  }\n}\n\nclass ItemDoesNotExist extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'ItemDoesNotExist'\n    this.message = 'Item with the provided id does not exist.'\n    this.status = statusCodes['Not Found']\n  }\n}\n\nclass ItemUpdateConflict extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'ItemUpdateConflict'\n    this.message = 'Item update conflict.'\n    this.status = statusCodes['Conflict']\n  }\n}\n\nclass OperationsMissing extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'OperationsMissing'\n    this.message = 'Operations missing.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass OperationsMustBeArray extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'OperationsMustBeArray'\n    this.message = 'Operations provided must be an array.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass CommandNotRecognized extends Error {\n  constructor(command, ...params) {\n    super(command, ...params)\n\n    this.name = 'CommandNotRecognized'\n    this.message = `Command '${command}' not recognized.`\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass OperationsConflict extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'OperationsConflict'\n    this.message = 'Operations conflict. Only allowed 1 operation per item.'\n    this.status = statusCodes['Conflict']\n  }\n}\n\nclass OperationsExceedLimit extends Error {\n  constructor(limit, ...params) {\n    super(limit, ...params)\n\n    this.name = 'OperationsExceedLimit'\n    this.message = `Operations exceed limit. Only allowed ${limit} operations.`\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nexport default {\n  DatabaseNameMissing,\n  DatabaseNameCannotBeBlank,\n  DatabaseNameMustBeString,\n  DatabaseNameTooLong,\n  DatabaseAlreadyOpening,\n  ChangeHandlerMissing,\n  ChangeHandlerMustBeFunction,\n  DatabaseNotOpen,\n  ItemMissing,\n  ItemInvalid,\n  ItemTooLarge,\n  ItemIdMustBeString,\n  ItemIdTooLong,\n  ItemIdMissing,\n  ItemIdCannotBeBlank,\n  ItemAlreadyExists,\n  ItemDoesNotExist,\n  ItemUpdateConflict,\n  OperationsMissing,\n  OperationsMustBeArray,\n  OperationsConflict,\n  OperationsExceedLimit,\n  CommandNotRecognized\n}\n","import statusCodes from '../statusCodes'\n\nclass AppIdAlreadySet extends Error {\n  constructor(appId, ...params) {\n    super(appId, ...params)\n\n    this.name = 'AppIdAlreadySet'\n    this.message = 'Application ID already set.'\n    this.status = statusCodes['Conflict']\n    this.appId = appId\n  }\n}\n\nclass AppIdMustBeString extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'AppIdMustBeString'\n    this.message = 'Application ID must be a string.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass AppIdMissing extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'AppIdMissing'\n    this.message = 'Application ID missing.'\n    this.status = statusCodes['Bad Request']\n  }\n}\nclass AppIdCannotBeBlank extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'AppIdCannotBeBlank'\n    this.message = 'Application ID cannot be blank.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass WebCryptoUnavailable extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'WebCryptoUnavailable'\n    this.message = 'The WebCrypto API is unavailable. Please make sure your website uses https.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nexport default {\n  AppIdAlreadySet,\n  AppIdMustBeString,\n  AppIdMissing,\n  AppIdCannotBeBlank,\n  WebCryptoUnavailable,\n}\n","import statusCodes from '../statusCodes'\n\nclass SuccessUrlMissing extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'SuccessUrlMissing'\n    this.message = 'Success url missing to let Stripe know where to redirect users on successful payment.'\n    this.status = statusCodes['Bad Request']\n  }\n}\nclass SuccessUrlMustBeString extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'SuccessUrlMustBeString'\n    this.message = 'Success url must be a string.'\n    this.status = statusCodes['Bad Request']\n  }\n}\nclass SuccessUrlInvalid extends Error {\n  constructor(invalidProtocol, ...params) {\n    super(invalidProtocol, ...params)\n\n    this.name = 'SuccessUrlInvalid'\n    this.message = invalidProtocol ? 'Success url must start with http or https.' : 'Success url invalid.'\n    this.status = statusCodes['Bad Request']\n  }\n}\nclass CancelUrlMissing extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'CancelUrlMissing'\n    this.message = 'Cancel url missing to let Stripe know where to redirect users on cancelled payment.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass CancelUrlMustBeString extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'CancelUrlMustBeString'\n    this.message = 'Cancel url must be a string.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass CancelUrlInvalid extends Error {\n  constructor(invalidProtocol, ...params) {\n    super(invalidProtocol, ...params)\n\n    this.name = 'CancelUrlInvalid'\n    this.message = invalidProtocol ? 'Cancel url must start with http or https.' : 'Cancel url invalid.'\n    this.status = statusCodes['Bad Request']\n  }\n}\nclass StripeJsLibraryMissing extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'StripeLibraryMissing'\n    this.message = 'Stripe.js library missing. Be sure to include the script in your html file (https://stripe.com/docs/stripe-js#setup).'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass PaymentsDisabled extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'PaymentsDisabled'\n    this.message = 'Payments on this app are disabled. Enable payments in the admin panel.'\n    this.status = statusCodes['Forbidden']\n  }\n}\n\nclass SubscriptionPlanNotSet extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'SubscriptionPlanNotSet'\n    this.message = 'Subscription plan not set. Set the subscription plan in the admin panel.'\n    this.status = statusCodes['Forbidden']\n  }\n}\n\nclass SubscriptionPlanAlreadyPurchased extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'SubscriptionPlanAlreadyPurchased'\n    this.message = 'Subscription plan already purchased.'\n    this.status = statusCodes['Conflict']\n  }\n}\nclass StripeAccountNotConnected extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'StripeAccountNotConnected'\n    this.message = 'Stripe account not connected. Connect a Stripe account in the admin panel.'\n    this.status = statusCodes['Forbidden']\n  }\n}\n\nclass SubscriptionNotFound extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'SubscriptionNotFound'\n    this.message = 'Subscription not found. User must purchase a subscription.'\n    this.status = statusCodes['Payment Required']\n  }\n}\n\nclass SubscribedToIncorrectPlan extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'SubscribedToIncorrectPlan'\n    this.message = \"Subscribed to the incorrect subscription plan. The user must purchase the app's current subscription plan.\"\n    this.status = statusCodes['Payment Required']\n  }\n}\n\nclass SubscriptionInactive extends Error {\n  constructor(subscriptionStatus, ...params) {\n    super(...params)\n\n    this.name = 'SubscriptionInactive'\n    this.message = \"The user's subscription is inactive.\"\n    this.subscriptionStatus = subscriptionStatus\n    this.status = statusCodes['Payment Required']\n  }\n}\n\nclass SubscriptionNotPurchased extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'SubscriptionNotPurchased'\n    this.message = 'Subscription not purchased. User must purchase a subscription.'\n    this.status = statusCodes['Payment Required']\n  }\n}\n\nclass SubscriptionAlreadyCanceled extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'SubscriptionAlreadyCanceled'\n    this.message = 'Subscription already canceled. User must purchase a new subscription.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass TrialExpired extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'TrialExpired'\n    this.message = 'Trial expired. User must purchase a subscription.'\n    this.status = statusCodes['Payment Required']\n  }\n}\n\nclass StripeError extends Error {\n  constructor(error, ...params) {\n    super(error, ...params)\n\n    const { status, type, message } = error\n\n    this.name = 'StripeError'\n    this.message = message\n    this.type = type\n    this.status = status\n  }\n}\n\nexport default {\n  SuccessUrlMissing,\n  SuccessUrlMustBeString,\n  SuccessUrlInvalid,\n  CancelUrlMissing,\n  CancelUrlMustBeString,\n  CancelUrlInvalid,\n  StripeJsLibraryMissing,\n  PaymentsDisabled,\n  SubscriptionPlanNotSet,\n  SubscriptionPlanAlreadyPurchased,\n  StripeAccountNotConnected,\n  SubscriptionNotFound,\n  SubscribedToIncorrectPlan,\n  SubscriptionInactive,\n  SubscriptionNotPurchased,\n  SubscriptionAlreadyCanceled,\n  TrialExpired,\n  StripeError,\n}\n","import auth from './auth'\nimport db from './db'\nimport config from './config'\nimport payments from './payments'\nimport statusCodes from '../statusCodes'\n\nclass AppIdNotSet extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'AppIdNotSet'\n    this.message = 'App ID not set yet. Make sure to configure app ID.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass ServiceUnavailable extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'ServiceUnavailable'\n    this.message = 'Service unavailable.'\n    this.status = statusCodes['Service Unavailable']\n  }\n}\n\nclass InternalServerError extends ServiceUnavailable {\n  constructor(...params) {\n    super(...params)\n\n    this.status = statusCodes['Internal Server Error']\n  }\n}\n\nclass Timeout extends ServiceUnavailable {\n  constructor(...params) {\n    super(...params)\n\n    this.status = statusCodes['Gateway Timeout']\n  }\n}\n\nclass Reconnecting extends ServiceUnavailable {\n  constructor(...params) {\n    super(...params)\n\n    this.message = 'Reconnecting.'\n  }\n}\n\nclass UnknownServiceUnavailable extends ServiceUnavailable {\n  constructor(e, ...params) {\n    super(e, ...params)\n\n    console.error('Userbase error. Please report this to support@userbase.com.\\n\\n', e)\n  }\n}\n\nclass ParamsMustBeObject extends Error {\n  constructor(...params) {\n    super(...params)\n\n    this.name = 'ParamsMustBeObject'\n    this.message = 'Parameters passed to function must be placed inside an object.'\n    this.status = statusCodes['Bad Request']\n  }\n}\n\nclass TooManyRequests extends Error {\n  constructor(retryDelay, ...params) {\n    super(retryDelay, ...params)\n\n    const retryDelaySeconds = Math.floor(retryDelay / 1000)\n\n    this.name = 'TooManyRequests'\n    this.message = `Too many requests in a row. Please try again in ${retryDelaySeconds} second${retryDelaySeconds !== 1 ? 's' : ''}.`\n    this.status = statusCodes['Too Many Requests']\n  }\n}\n\nexport default {\n  ...auth,\n  ...db,\n  ...config,\n  ...payments,\n  AppIdNotSet,\n  InternalServerError,\n  ServiceUnavailable,\n  Timeout,\n  Reconnecting,\n  UnknownServiceUnavailable,\n  ParamsMustBeObject,\n  TooManyRequests\n}\n","import errors from './errors'\n\nconst VERSION = '/v1'\nconst DEFAULT_ENDPOINT = 'https://v1.userbase.com' + VERSION\n\nconst STRIPE_PRODUCTION_PUBLISHABLE_KEY = 'pk_live_jI6lbsAIQlu2u4uTkDXFrSEW'\nconst STRIPE_TEST_PUBLISHABLE_KEY = 'pk_test_rYANrLdNfdJXJ2d808wW4pqY'\n\nlet userbaseAppId = null\n\nconst REMEMBER_ME_OPTIONS = {\n  local: true,\n  session: true,\n  none: true\n}\n\nconst getAppId = () => {\n  if (!userbaseAppId) throw new errors.AppIdNotSet\n  return userbaseAppId\n}\n\nconst getEndpoint = () => {\n  return window._userbaseEndpoint || DEFAULT_ENDPOINT\n}\n\nconst setAppId = (appId) => {\n  if (userbaseAppId && userbaseAppId !== appId) throw new errors.AppIdAlreadySet(userbaseAppId)\n  if (typeof appId !== 'string') throw new errors.AppIdMustBeString\n  if (appId.length === 0) throw new errors.AppIdCannotBeBlank\n  userbaseAppId = appId\n}\n\nconst configure = ({ appId }) => {\n  setAppId(appId)\n}\n\nconst getStripePublishableKey = (isProduction) => {\n  return isProduction\n    ? (window._USERBASE_STRIPE_PRODUCTION_PUBLISHABLE_KEY || STRIPE_PRODUCTION_PUBLISHABLE_KEY)\n    : (window._USERBASE_STRIPE_TEST_PUBLISHABLE_KEY || STRIPE_TEST_PUBLISHABLE_KEY)\n}\n\nexport default {\n  REMEMBER_ME_OPTIONS,\n  getAppId,\n  getEndpoint,\n  configure,\n  getStripePublishableKey,\n}\n","import config from '../config'\nimport errors from '../errors'\n\nconst TEN_SECONDS_MS = 10 * 1000\n\nclass RequestError extends Error {\n  constructor(data, status, statusText, ...params) {\n    super(data, status, statusText, ...params)\n\n    this.response = {\n      data,\n      status,\n      statusText,\n    }\n\n    this.message = 'Request failed with status code ' + status\n  }\n}\n\nclass TimeoutError extends Error {\n  constructor(timeout, ...params) {\n    super(timeout, ...params)\n\n    this.message = `timeout of ${timeout}ms exceeded`\n  }\n}\n\nconst handleResponse = (xhr, resolve, reject) => {\n  let response\n  try {\n    response = JSON.parse(xhr.response)\n  } catch {\n    response = xhr.response\n  }\n\n  if (xhr.status >= 200 && xhr.status < 300) {\n    resolve(response)\n  } else {\n    reject(new RequestError(response, xhr.status, xhr.statusText))\n  }\n}\n\nconst processXhr = (xhr, resolve, reject) => {\n  xhr.timeout = TEN_SECONDS_MS\n  xhr.onload = () => handleResponse(xhr, resolve, reject)\n  xhr.onerror = () => reject(new errors.ServiceUnavailable)\n  xhr.ontimeout = () => reject(new TimeoutError(TEN_SECONDS_MS))\n}\n\nconst signUp = (username, passwordToken, publicKey, passwordSalts, keySalts, email, profile, passwordBasedBackup) => {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n\n    const method = 'POST'\n    const url = `${config.getEndpoint()}/api/auth/sign-up?appId=${config.getAppId()}`\n    const data = JSON.stringify({\n      username,\n      passwordToken,\n      publicKey,\n      passwordSalts,\n      keySalts,\n      email,\n      profile,\n      passwordBasedBackup\n    })\n\n    xhr.open(method, url)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    xhr.send(data)\n\n    processXhr(xhr, resolve, reject)\n  })\n}\n\nconst getPasswordSalts = (username) => {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n\n    const method = 'GET'\n    const url = `${config.getEndpoint()}/api/auth/get-password-salts?appId=${config.getAppId()}&username=${encodeURIComponent(username)}`\n\n    xhr.open(method, url)\n    xhr.send()\n\n    processXhr(xhr, resolve, reject)\n  })\n}\n\nconst signIn = async (username, passwordToken) => {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n\n    const method = 'POST'\n    const url = `${config.getEndpoint()}/api/auth/sign-in?appId=${config.getAppId()}`\n    const data = JSON.stringify({\n      username,\n      passwordToken,\n    })\n\n    xhr.open(method, url)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    xhr.send(data)\n\n    processXhr(xhr, resolve, reject)\n  })\n}\n\nconst signInWithSession = (sessionId) => {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n\n    const method = 'POST'\n    const url = `${config.getEndpoint()}/api/auth/sign-in-with-session?appId=${config.getAppId()}&sessionId=${sessionId}`\n\n    xhr.open(method, url)\n    xhr.send()\n\n    processXhr(xhr, resolve, reject)\n  })\n}\n\nconst getServerPublicKey = async () => {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n\n    const method = 'GET'\n    const url = `${config.getEndpoint()}/api/auth/server-public-key`\n    const responseType = 'arraybuffer'\n\n    xhr.open(method, url)\n    xhr.responseType = responseType\n    xhr.send()\n\n    processXhr(xhr, resolve, reject)\n  })\n}\n\nexport default {\n  signUp,\n  getPasswordSalts,\n  signIn,\n  signInWithSession,\n  getServerPublicKey,\n}\n","import auth from './auth'\n\nexport default {\n  auth\n}\n","const tryCatchWrapper = (func) => (...args) => {\n  try {\n    return func(...args)\n  } catch (e) {\n    // ok to swallow error\n    //\n    // local/sessionStorage are non-critical benefits. If they happen to be available,\n    // they're helpful, but if not, the SDK functions totally fine.\n    //\n    // If a function fails, behavior is functionally the same as if rememberMe is 'none'.\n    console.warn('Error accessing browser storage. Defaulting to memory.\\n\\n', e)\n  }\n}\n\nconst _getSeedName = (appId, username) => `userbaseSeed.${appId}.${username}`\n\nconst setCurrentSession = tryCatchWrapper((rememberMe, username, signedIn, sessionId, creationDate, expirationDate) => {\n  const session = { username, signedIn, sessionId, creationDate, expirationDate }\n  const sessionString = JSON.stringify(session)\n\n  if (rememberMe === 'local') {\n    localStorage.setItem('userbaseCurrentSession', sessionString)\n  } else if (rememberMe === 'session') {\n    sessionStorage.setItem('userbaseCurrentSession', sessionString)\n  }\n})\n\nconst getCurrentSession = tryCatchWrapper(() => {\n  const sessionStorageCurrentSessionString = sessionStorage.getItem('userbaseCurrentSession')\n\n  if (sessionStorageCurrentSessionString) {\n    const currentSession = JSON.parse(sessionStorageCurrentSessionString)\n\n    if (!currentSession.signedIn) {\n      const localCurrentSessionString = localStorage.getItem('userbaseCurrentSession')\n\n      if (localCurrentSessionString) {\n        const localCurrentSession = JSON.parse(localCurrentSessionString)\n\n        // allows session from localStorage to override sessionStorage if signed in\n        // to localStorage session and not signed in to sessionStorage session\n        if (localCurrentSession.signedIn) {\n          return {\n            ...localCurrentSession,\n            rememberMe: 'local'\n          }\n        }\n      }\n    }\n\n    return {\n      ...JSON.parse(sessionStorageCurrentSessionString),\n      rememberMe: 'session'\n    }\n  }\n\n  const localSessionString = localStorage.getItem('userbaseCurrentSession')\n  return localSessionString && {\n    ...JSON.parse(localSessionString),\n    rememberMe: 'local'\n  }\n})\n\nconst saveSeedString = tryCatchWrapper((rememberMe, appId, username, seedString) => {\n  if (rememberMe === 'local') {\n    localStorage.setItem(_getSeedName(appId, username), seedString)\n  } else if (rememberMe === 'session') {\n    sessionStorage.setItem(_getSeedName(appId, username), seedString)\n  }\n})\n\nconst removeSeedString = tryCatchWrapper((appId, username) => {\n  const seedName = _getSeedName(appId, username)\n  sessionStorage.removeItem(seedName)\n  localStorage.removeItem(seedName)\n})\n\nconst getSeedString = tryCatchWrapper((appId, username) => {\n  const seedName = _getSeedName(appId, username)\n  return sessionStorage.getItem(seedName) || localStorage.getItem(seedName)\n})\n\nconst signInSession = (rememberMe, username, sessionId, creationDate, expirationDate) => {\n  const signedIn = true\n  setCurrentSession(rememberMe, username, signedIn, sessionId, creationDate, expirationDate)\n}\n\nconst signOutSession = (rememberMe, username) => {\n  const signedIn = false\n  setCurrentSession(rememberMe, username, signedIn)\n}\n\nconst removeCurrentSession = tryCatchWrapper(() => {\n  sessionStorage.removeItem('userbaseCurrentSession')\n  localStorage.removeItem('userbaseCurrentSession')\n})\n\nexport default {\n  signInSession,\n  signOutSession,\n  getCurrentSession,\n  saveSeedString,\n  removeSeedString,\n  getSeedString,\n  removeCurrentSession,\n}\n","const ONE_KB = 1024\nconst TEN_KB = 10 * ONE_KB\n\n// https://stackoverflow.com/a/20604561/11601853\nexport const arrayBufferToString = (buf) => {\n  const bufView = new Uint16Array(buf)\n  const length = bufView.length\n  let result = ''\n  let chunkSize = TEN_KB // using chunks prevents stack from blowing up\n\n  for (var i = 0; i < length; i += chunkSize) {\n    if (i + chunkSize > length) {\n      chunkSize = length - i\n    }\n    const chunk = bufView.subarray(i, i + chunkSize)\n    result += String.fromCharCode.apply(null, chunk)\n  }\n\n  return result\n}\n\n// https://developers.google.com/web/updates/2012/06/How-to-convert-ArrayBuffer-to-and-from-String\nexport const stringToArrayBuffer = (str) => {\n  let buf = new ArrayBuffer(str.length * 2) // 2 bytes for each char\n  let bufView = new Uint16Array(buf)\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i)\n  }\n  return buf\n}\n\n/**\n* Creates a new Uint8Array based on two different ArrayBuffers\n*\n* Source: https://gist.github.com/72lions/4528834\n*\n* @param {ArrayBuffers} buffer1 The first buffer.\n* @param {ArrayBuffers} buffer2 The second buffer.\n* @return {ArrayBuffers} The new ArrayBuffer created out of the two.\n*\n*/\nexport const appendBuffer = (buffer1, buffer2) => {\n  const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength)\n  tmp.set(new Uint8Array(buffer1), 0)\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength)\n  return tmp.buffer\n}\n\nexport const appendBuffers = (buffers) => {\n  const bufferByteLengths = buffers.map(buffer => buffer.byteLength)\n  const totalByteLength = bufferByteLengths.reduce((byteLengthSum, bufferByteLength) => byteLengthSum + bufferByteLength)\n\n  const tmp = new Uint8Array(totalByteLength)\n  let currentByteLength = 0\n  for (let i = 0; i < buffers.length; i++) {\n    tmp.set(new Uint8Array(buffers[i]), currentByteLength)\n    currentByteLength += bufferByteLengths[i]\n  }\n\n  return {\n    buffer: tmp.buffer,\n    byteLengths: bufferByteLengths\n  }\n}\n\nexport const hexStringToArrayBuffer = (hexString) => {\n  if (hexString.length % 2 !== 0) throw new Error('Hex string must be even length')\n  const halfHexStringLen = hexString.length / 2\n  const array = []\n  for (let i = 0; i < halfHexStringLen; i++) {\n    const byteStartIndex = i * 2\n    const byte = hexString.substring(byteStartIndex, byteStartIndex + 2)\n    const byteAsInt = parseInt(byte, 16)\n    array.push(byteAsInt)\n  }\n  return new Uint8Array(array)\n}\n","import base64 from 'base64-arraybuffer'\nimport { stringToArrayBuffer } from './utils'\n\nconst BYTE_SIZE = 32 // 256 / 8\nconst HASH_ALGORITHM_NAME = 'SHA-256'\n\n/**\n *\n * @param {ArrayBuffer} data\n */\nconst hash = async (data) => {\n  const result = await window.crypto.subtle.digest(\n    {\n      name: HASH_ALGORITHM_NAME,\n    },\n    data\n  )\n  return result\n}\n\nconst hashBase64String = async (dataString) => {\n  const data = base64.decode(dataString)\n  const result = await hash(data)\n  return base64.encode(result)\n}\n\nconst hashString = async (dataString) => {\n  const data = stringToArrayBuffer(dataString)\n  const result = await hash(data)\n  return base64.encode(result)\n}\n\nexport default {\n  BYTE_SIZE,\n  HASH_ALGORITHM_NAME,\n  hash,\n  hashBase64String,\n  hashString\n}\n","import base64 from 'base64-arraybuffer'\nimport sha256 from './sha-256'\nimport { stringToArrayBuffer } from './utils'\n\nconst HKDF_ALGORITHM_NAME = 'HKDF'\nconst RAW_KEY_TYPE = 'raw'\nconst KEY_IS_NOT_EXTRACTABLE = false\nconst KEY_WILL_BE_USED_TO = ['deriveKey', 'deriveBits']\n\nconst importHkdfKeyFromString = async (seedString) => {\n  const seed = stringToArrayBuffer(seedString)\n  const hkdfKey = await importHkdfKey(seed)\n  return hkdfKey\n}\n\nconst importHkdfKey = async (seed) => {\n  const hkdfKey = await window.crypto.subtle.importKey(\n    RAW_KEY_TYPE,\n    seed,\n    {\n      name: HKDF_ALGORITHM_NAME\n    },\n    KEY_IS_NOT_EXTRACTABLE,\n    KEY_WILL_BE_USED_TO\n  )\n  return hkdfKey\n}\n\n/**\n *  RFC 5869:\n *\n *  \"the use of salt adds significantly to the strength of HKDF...\n *  Ideally, the salt value is a random (or pseudorandom) string of the\n *  length HashLen\"\n *\n *  https://tools.ietf.org/html/rfc5869#section-3.1\n *\n **/\nconst SALT_BYTE_SIZE = sha256.BYTE_SIZE\nconst generateSalt = () => window.crypto.getRandomValues(new Uint8Array(SALT_BYTE_SIZE))\n\nconst getParams = (keyName, salt) => ({\n  name: HKDF_ALGORITHM_NAME,\n  info: stringToArrayBuffer(keyName),\n  hash: sha256.HASH_ALGORITHM_NAME,\n  salt\n})\n\nconst PASSWORD_TOKEN_NAME = 'password-token'\nconst PASSWORD_TOKEN_NUM_BITS = 256\n\nconst getPasswordToken = async (hkdfKey, salt) => {\n  const passwordTokenBits = await window.crypto.subtle.deriveBits(\n    getParams(PASSWORD_TOKEN_NAME, salt),\n    hkdfKey,\n    PASSWORD_TOKEN_NUM_BITS\n  )\n\n  return base64.encode(passwordTokenBits)\n}\n\nexport default {\n  importHkdfKeyFromString,\n  importHkdfKey,\n  generateSalt,\n  getParams,\n  getPasswordToken\n}\n","import base64 from 'base64-arraybuffer'\nimport hkdf from './hkdf'\nimport { arrayBufferToString, stringToArrayBuffer, appendBuffer } from './utils'\n\nconst ENCRYPTION_ALGORITHM_NAME = 'AES-GCM'\nconst BIT_SIZE = 256\nconst KEY_IS_EXTRACTABLE = true\nconst KEY_WILL_BE_USED_TO = ['encrypt', 'decrypt']\nconst RAW_KEY_TYPE = 'raw'\n\nconst ENCRYPTION_KEY_NAME = 'encryption'\n\nconst PASSWORD_BASED_ENCRYPTION_KEY = 'password-based-encryption'\n\n/**\n * NIST recommendation:\n *\n * \"For  IVs,  it  is  recommended  that  implementations  restrict  support  to\n * the  length  of  96  bits,  to  promote interoperability, efficiency, and\n * simplicity of design.\"\n *\n * Pg. 8\n * https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf\n *\n **/\nconst RECOMMENDED_IV_BYTE_SIZE = 12 // 96 / 8\n\n/**\n * Source on tag length:\n * https://crypto.stackexchange.com/questions/26783/ciphertext-and-tag-size-and-iv-transmission-with-aes-in-gcm-mode/26787\n */\nconst RECOMMENDED_AUTHENTICATION_TAG_LENGTH = 128\n\nconst windowOrSelfObject = () => {\n  return typeof window !== 'undefined'\n    ? window\n    : self\n}\n\nconst getEncryptionKeyParams = () => ({\n  name: ENCRYPTION_ALGORITHM_NAME,\n  length: BIT_SIZE\n})\n\nconst importKeyFromMaster = async (masterKey, salt) => {\n  const encryptionKey = await window.crypto.subtle.deriveKey(\n    hkdf.getParams(ENCRYPTION_KEY_NAME, salt),\n    masterKey,\n    getEncryptionKeyParams(),\n    KEY_IS_EXTRACTABLE,\n    KEY_WILL_BE_USED_TO\n  )\n  return encryptionKey\n}\n\nconst generateKey = async () => {\n  const key = await window.crypto.subtle.generateKey(\n    getEncryptionKeyParams(),\n    KEY_IS_EXTRACTABLE,\n    KEY_WILL_BE_USED_TO\n  )\n  return key\n}\n\nconst getKeyStringFromKey = async (key) => {\n  const rawKey = await window.crypto.subtle.exportKey(RAW_KEY_TYPE, key)\n  const keyString = base64.encode(rawKey)\n  return keyString\n}\n\nconst getKeyFromKeyString = async (keyString) => {\n  const rawKey = base64.decode(keyString)\n  const key = await getKeyFromRawKey(rawKey)\n  return key\n}\n\nconst getKeyFromRawKey = async (rawKey) => {\n  const key = await windowOrSelfObject().crypto.subtle.importKey(\n    RAW_KEY_TYPE,\n    rawKey,\n    {\n      name: ENCRYPTION_ALGORITHM_NAME\n    },\n    KEY_IS_EXTRACTABLE,\n    KEY_WILL_BE_USED_TO\n  )\n  return key\n}\n\nconst getRawKeyFromKey = async (key) => {\n  const rawKey = await windowOrSelfObject().crypto.subtle.exportKey(RAW_KEY_TYPE, key)\n  return rawKey\n}\n\n/**\n *\n * @param {CryptoKey} key\n * @param {ArrayBuffer} plaintext\n * @returns {ArrayBuffer} encrypted Array Buffer\n *\n *     encrypted is a concatentation of Array Buffers [ciphertext, auth tag, IV]\n *\n *     The Authentication Tag is a hash of the plaintext to ensure the same data that\n *     is ecncrypted is the resulting data when decrypted. Note that the browser crypto\n *     library's result is the concatenation of Array Buffers [ciphertext, auth tag]\n *\n *     The IV is a random intialization vector that prevents an attacker\n *     from determining a user's key. It can be exposed alongside the ciphertext safely.\n *\n */\nconst encrypt = async (key, plaintext) => {\n  const iv = windowOrSelfObject().crypto.getRandomValues(new Uint8Array(RECOMMENDED_IV_BYTE_SIZE))\n\n  // this result is the concatenation of Array Buffers [ciphertext, auth tag]\n  const ciphertextArrayBuffer = await windowOrSelfObject().crypto.subtle.encrypt(\n    {\n      name: ENCRYPTION_ALGORITHM_NAME,\n      iv,\n      tagLength: RECOMMENDED_AUTHENTICATION_TAG_LENGTH\n    },\n    key,\n    plaintext\n  )\n\n  return appendBuffer(ciphertextArrayBuffer, iv)\n}\n\nconst encryptJson = async (key, plaintextJson) => {\n  const plaintextString = JSON.stringify(plaintextJson)\n  const encrypted = await encryptString(key, plaintextString)\n  return encrypted\n}\n\nconst encryptString = async (key, plaintextString) => {\n  const plaintextArrayBuffer = stringToArrayBuffer(plaintextString)\n  const encrypted = await encrypt(key, plaintextArrayBuffer)\n  return base64.encode(encrypted)\n}\n\n/**\n *\n * @param {CryptoKey} key\n * @param {ArrayBuffer} encrypted - the encrypted Array Buffer\n * @returns {object} plaintext\n */\nconst decrypt = async (key, encrypted) => {\n  const ivStartIndex = encrypted.byteLength - RECOMMENDED_IV_BYTE_SIZE\n  const ciphertextArrayBuffer = encrypted.slice(0, ivStartIndex)\n  const iv = encrypted.slice(ivStartIndex)\n\n  const plaintextArrayBuffer = await windowOrSelfObject().crypto.subtle.decrypt(\n    {\n      name: ENCRYPTION_ALGORITHM_NAME,\n      iv,\n      tagLength: RECOMMENDED_AUTHENTICATION_TAG_LENGTH\n    },\n    key,\n    ciphertextArrayBuffer\n  )\n  return plaintextArrayBuffer\n}\n\nconst decryptJson = async (key, encryptedJsonString) => {\n  const plaintextString = await decryptString(key, encryptedJsonString)\n  return JSON.parse(plaintextString)\n}\n\nconst decryptString = async (key, encryptedString) => {\n  const encryptedArrayBuffer = base64.decode(encryptedString)\n  const plaintextArrayBuffer = await decrypt(key, encryptedArrayBuffer)\n  const plaintextString = arrayBufferToString(plaintextArrayBuffer)\n  return plaintextString\n}\n\nconst getPasswordBasedEncryptionKey = async (hkdfKey, salt) => {\n  const encryptionKey = await window.crypto.subtle.deriveKey(\n    hkdf.getParams(PASSWORD_BASED_ENCRYPTION_KEY, salt),\n    hkdfKey,\n    getEncryptionKeyParams(),\n    !KEY_IS_EXTRACTABLE,\n    KEY_WILL_BE_USED_TO\n  )\n  return encryptionKey\n}\n\nexport default {\n  getEncryptionKeyParams,\n  importKeyFromMaster,\n  generateKey,\n  getKeyStringFromKey,\n  getKeyFromKeyString,\n  getRawKeyFromKey,\n  getKeyFromRawKey,\n  encrypt,\n  encryptJson,\n  encryptString,\n  decrypt,\n  decryptJson,\n  decryptString,\n  getPasswordBasedEncryptionKey\n}\n","import DH from 'diffie-hellman'\nimport aesGcm from './aes-gcm'\nimport hkdf from './hkdf'\nimport sha256 from './sha-256'\nimport { hexStringToArrayBuffer } from './utils'\nimport api from '../api'\n\nconst KEY_IS_EXTRACTABLE = true\nconst KEY_WILL_BE_USED_TO = ['encrypt'] // unused\nconst DIFFIE_HELLMAN_KEY_NAME = 'diffie-hellman'\n\n// RFC 3526 detailing publicly known 2048 bit safe prime: https://www.ietf.org/rfc/rfc3526.txt\nconst PRIME = hexStringToArrayBuffer('ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff')\nconst GENERATOR = [2]\n\n// get public key from the server to allow developers to easily swap out default server with their own\n// server running userbase-server\nlet serverPublicKey = null\nconst getServerPublicKey = async () => {\n  if (serverPublicKey) {\n    return serverPublicKey\n  } else {\n    serverPublicKey = await api.auth.getServerPublicKey() // eslint-disable-line require-atomic-updates\n    return serverPublicKey\n  }\n}\n\nconst setPrivateKeyAndGenerateKeys = (diffieHellman, privateKey) => {\n  diffieHellman.setPrivateKey(privateKey)\n  diffieHellman.generateKeys()\n  return diffieHellman\n}\n\nconst createDiffieHellman = (privateKey) => {\n  const diffieHellman = DH.createDiffieHellman(PRIME, GENERATOR)\n  return setPrivateKeyAndGenerateKeys(diffieHellman, privateKey)\n}\n\nconst getSharedKey = async (privateKey, otherPublicKey) => {\n  const diffieHellman = createDiffieHellman(privateKey)\n  const sharedSecret = diffieHellman.computeSecret(otherPublicKey)\n\n  const sharedRawKey = await sha256.hash(sharedSecret)\n  const sharedKey = await aesGcm.getKeyFromRawKey(sharedRawKey)\n  return sharedKey\n}\n\nconst getPublicKey = (privateKey) => {\n  const diffieHellman = createDiffieHellman(privateKey)\n  return diffieHellman.getPublicKey()\n}\n\nconst getSharedKeyWithServer = async (privateKey) => {\n  const sharedKey = await getSharedKey(privateKey, new Uint8Array(await getServerPublicKey()))\n  return sharedKey\n}\n\nconst importKeyFromMaster = async (masterKey, salt) => {\n  const privateKey = await window.crypto.subtle.deriveKey(\n    hkdf.getParams(DIFFIE_HELLMAN_KEY_NAME, salt),\n    masterKey,\n    aesGcm.getEncryptionKeyParams(), // DH not supported, using raw AES key as secret instead\n    KEY_IS_EXTRACTABLE,\n    KEY_WILL_BE_USED_TO\n  )\n\n  const rawPrivateKey = await aesGcm.getRawKeyFromKey(privateKey)\n  return rawPrivateKey\n}\n\nexport default {\n  getPublicKey,\n  getSharedKey,\n  getSharedKeyWithServer,\n  importKeyFromMaster,\n}\n","import base64 from 'base64-arraybuffer'\nimport hkdf from './hkdf'\nimport sha256 from './sha-256'\nimport { stringToArrayBuffer } from './utils'\n\nconst HMAC_KEY_NAME = 'authentication'\n\nconst ALGORITHM_NAME = 'HMAC'\nconst KEY_IS_EXTRACTABLE = false\nconst KEY_WILL_BE_USED_TO = ['sign']\n\nconst importKeyFromMaster = async (masterKey, salt) => {\n  const hmacKey = await window.crypto.subtle.deriveKey(\n    hkdf.getParams(HMAC_KEY_NAME, salt),\n    masterKey,\n    {\n      name: ALGORITHM_NAME,\n      hash: {\n        name: sha256.HASH_ALGORITHM_NAME\n      }\n    },\n    KEY_IS_EXTRACTABLE,\n    KEY_WILL_BE_USED_TO\n  )\n  return hmacKey\n}\n\n/**\n *\n * @param {CryptoKey} key\n * @param {String} data\n */\nconst sign = async (key, data) => {\n  const result = await window.crypto.subtle.sign(\n    {\n      name: ALGORITHM_NAME,\n    },\n    key,\n    data\n  )\n  return result\n}\n\n/**\n *\n * @param {CryptoKey} key\n * @param {String} data\n */\nconst signString = async (key, data) => {\n  const result = await sign(key, stringToArrayBuffer(data))\n  return base64.encode(result)\n}\n\nexport default {\n  importKeyFromMaster,\n  sign,\n  signString\n}\n","import scrypt from 'scrypt-js'\nimport base64 from 'base64-arraybuffer'\nimport { stringToArrayBuffer } from './utils'\n\n/**\n *\n * From the Scrypt paper:\n *\n * \"100ms is a reasonable upper bound on the delay which should be\n * cryptographically imposed on interactive logins\"\n *\n * Pg. 13\n * https://www.tarsnap.com/scrypt/scrypt.pdf\n *\n * With an optimized Scrypt algorithm running on a 3.1 GHz Intel Core i5,\n * N = 32768 is the highest work factor that takes <100ms for the\n * algorithm to run. Thus, it's the latest recommended work factor.\n *\n * Source: https://blog.filippo.io/the-scrypt-parameters/\n *\n * However, we are not running an optimized version of the algorithm on a\n * single machine. Users are running a pure js version written for the browser.\n * Safari, for example, takes >6 seconds to run when N = 32768 on a 2.5 GHz\n * Intel Core i5. A higher end CPU can only shave around 1 second off that time.\n * Further, it takes over 1s to run in Firefox, and over 500ms to run in Chrome.\n * This is an unacceptably slow interactive login delay to impose on users.\n *\n * Thus, we are going with N = 16384 to ensure interactive logins\n * are closer to the reasonable delay the function will impose on users,\n * while still maintaining a high level of security.\n *\n **/\nconst N = 16384 // 16mb\nconst r = 8\nconst p = 1\n\nconst HASH_LENGTH = 32\n\n/**\n * NIST recommendation:\n *\n * \"The length of the randomly-generated portion of the salt shall be at least 128 bits.\"\n *\n * Section 5.1\n * https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf\n *\n **/\nconst SALT_LENGTH = 16\nconst generateSalt = () => window.crypto.getRandomValues(new Uint8Array(SALT_LENGTH))\n\nconst hash = async (passwordString, salt) => {\n  const passwordArrayBuffer = new Uint8Array(stringToArrayBuffer(passwordString))\n  const passwordHash = await scrypt.scrypt(passwordArrayBuffer, salt, N, r, p, HASH_LENGTH)\n  return base64.encode(passwordHash)\n}\n\nexport default {\n  generateSalt,\n  hash,\n}\n","import aesGcm from './aes-gcm'\nimport diffieHellman from './diffie-hellman'\nimport sha256 from './sha-256'\nimport hmac from './hmac'\nimport hkdf from './hkdf'\nimport scrypt from './scrypt'\n\nconst SEED_BYTE_SIZE = 32 // 256 / 8\nconst generateSeed = () => window.crypto.getRandomValues(new Uint8Array(SEED_BYTE_SIZE))\n\nexport default {\n  generateSeed,\n  aesGcm,\n  diffieHellman,\n  sha256,\n  hmac,\n  hkdf,\n  scrypt\n}\n","export const readArrayBufferAsString = (arrayBuffer) => {\n  return new Promise(resolve => {\n    let reader = new FileReader()\n    reader.onload = () => resolve(reader.result)\n    reader.readAsText(new Blob([arrayBuffer]))\n  })\n}\n\nconst removeProtocolFromEndpoint = (endpoint) => {\n  const http = 'http://'\n  const https = 'https://'\n\n  if (endpoint.substring(0, http.length) === http) {\n    return endpoint.substring(http.length)\n  } else if (endpoint.substring(0, https.length) === https) {\n    return endpoint.substring(https.length)\n  } else {\n    return endpoint\n  }\n}\n\nexport const getProtocolFromEndpoint = (endpoint) => {\n  return endpoint.split(':')[0]\n}\n\nexport const getWsUrl = (endpoint) => {\n  const host = removeProtocolFromEndpoint(endpoint)\n  const protocol = getProtocolFromEndpoint(endpoint)\n\n  return ((protocol === 'https') ?\n    'wss://' : 'ws://') + host\n}\n\nexport const byteSizeOfString = (string) => {\n  return string.length * 2\n}\n\nexport const objectHasOwnProperty = (object, property) => {\n  return Object.prototype.hasOwnProperty.call(object, property)\n}\n\n// source: http://code.iamkate.com/javascript/queues\nexport function Queue() {\n  let queue = []\n  let offset = 0\n\n  this.getLength = () => queue.length - offset\n\n  this.isEmpty = () => queue.length === 0\n\n  this.enqueue = (item) => {\n    queue.push(item)\n    return this.getLength()\n  }\n\n  this.dequeue = () => {\n    // get item from front of the queue\n    const item = queue[offset]\n\n    offset += 1\n\n    // garbage collect unused space in queue when it grows large\n    if (offset * 2 > queue.length) {\n      queue = queue.slice(offset)\n      offset = 0\n    }\n\n    return item\n  }\n\n  this.peek = () => queue[offset]\n}\n","import base64 from 'base64-arraybuffer'\nimport uuidv4 from 'uuid/v4'\nimport LZString from 'lz-string'\nimport localData from './localData'\nimport crypto from './Crypto'\nimport { getWsUrl } from './utils'\nimport statusCodes from './statusCodes'\nimport config from './config'\nimport errors from './errors'\n\nconst wsAlreadyConnected = 'Web Socket already connected'\n\nconst BACKOFF_RETRY_DELAY = 1000\nconst MAX_RETRY_DELAY = 1000 * 30\n\nconst clientId = uuidv4() // only 1 client ID per browser tab (assumes code does not reload)\n\nclass RequestFailed extends Error {\n  constructor(action, e, ...params) {\n    super(...params)\n\n    this.name = `RequestFailed: ${action}`\n    this.message = e.message\n    this.status = e.status || (e.message === 'timeout' && statusCodes['Gateway Timeout'])\n    this.response = e.status && e\n  }\n}\n\nclass WebSocketError extends Error {\n  constructor(message, username, ...params) {\n    super(...params)\n\n    this.name = 'WebSocket error'\n    this.message = message\n    this.username = username\n  }\n}\n\nclass Connection {\n  constructor() {\n    this.init()\n  }\n\n  init(resolveConnection, rejectConnection, session, seedString, rememberMe, state) {\n    if (this.pingTimeout) clearTimeout(this.pingTimeout)\n\n    for (const property of Object.keys(this)) {\n      delete this[property]\n    }\n\n    this.ws = null\n    this.connected = false\n\n    this.resolveConnection = resolveConnection\n    this.rejectConnection = rejectConnection\n    this.connectionResolved = false\n\n    this.session = {\n      username: session && session.username,\n      sessionId: session && session.sessionId,\n      creationDate: session && session.creationDate,\n      authToken: session && session.authToken,\n    }\n\n    this.seedString = seedString\n    this.keys = {\n      init: false,\n      salts: {}\n    }\n\n    this.userData = {\n      stripeData: {}\n    }\n\n    this.rememberMe = rememberMe\n\n    this.requests = {}\n\n    this.state = state || {\n      databases: {},\n      dbIdToHash: {},\n      dbNameToHash: {}\n    }\n  }\n\n  connect(session, seedString = null, rememberMe, reconnectDelay, state) {\n    if (this.connected) throw new WebSocketError(wsAlreadyConnected, this.session.username)\n\n    return new Promise((resolve, reject) => {\n      let timeout = false\n\n      const timeoutToOpenWebSocket = setTimeout(\n        () => {\n          if (!this.connected && !this.reconnecting) {\n            timeout = true\n            reject(new WebSocketError('timeout'))\n          }\n        },\n        10000\n      )\n\n      const url = `${getWsUrl(config.getEndpoint())}/api?appId=${config.getAppId()}&sessionId=${session.sessionId}&clientId=${clientId}`\n\n      const ws = new WebSocket(url)\n\n      ws.onopen = async () => {\n        if (timeout) return\n        clearTimeout(timeoutToOpenWebSocket)\n      }\n\n      ws.onmessage = async (e) => {\n        if (timeout) return\n\n        try {\n          const message = JSON.parse(e.data)\n          const route = message.route\n\n          switch (route) {\n            case 'Ping': {\n              this.heartbeat()\n\n              const action = 'Pong'\n              this.ws.send(JSON.stringify({ action }))\n              break\n            }\n\n            case 'Connection': {\n              this.init(resolve, reject, session, seedString, rememberMe, state)\n              this.ws = ws\n              this.heartbeat()\n              this.connected = true\n\n              const {\n                keySalts,\n                encryptedValidationMessage,\n              } = message\n\n              this.keys.salts = keySalts\n              this.encryptedValidationMessage = new Uint8Array(encryptedValidationMessage.data)\n\n              await this.setKeys(this.seedString)\n\n              break\n            }\n\n            case 'ApplyTransactions': {\n              const dbId = message.dbId\n              const dbNameHash = message.dbNameHash || this.state.dbIdToHash[dbId]\n              const database = this.state.databases[dbNameHash]\n\n              if (!database) throw new Error('Missing database')\n\n              // queue guarantees transactions will be applied in the order they are received from the server\n              if (database.applyTransactionsQueue.isEmpty()) {\n\n                // take a spot in the queue and proceed applying so the next caller knows queue is not empty\n                database.applyTransactionsQueue.enqueue(null)\n              } else {\n\n                // wait until prior batch in queue finishes applying successfully\n                await new Promise(resolve => {\n                  const startApplyingThisBatchOfTransactions = resolve\n                  database.applyTransactionsQueue.enqueue(startApplyingThisBatchOfTransactions)\n                })\n              }\n\n              const openingDatabase = message.dbNameHash && message.dbKey\n              if (openingDatabase) {\n                const dbKeyString = await crypto.aesGcm.decryptString(this.keys.encryptionKey, message.dbKey)\n                database.dbKeyString = dbKeyString\n                database.dbKey = await crypto.aesGcm.getKeyFromKeyString(dbKeyString)\n              }\n\n              if (!database.dbKey) throw new Error('Missing db key')\n\n              if (message.bundle) {\n                const bundleSeqNo = message.bundleSeqNo\n                const base64Bundle = message.bundle\n                const compressedString = await crypto.aesGcm.decryptString(database.dbKey, base64Bundle)\n                const plaintextString = LZString.decompress(compressedString)\n                const bundle = JSON.parse(plaintextString)\n\n                database.applyBundle(bundle, bundleSeqNo)\n              }\n\n              const newTransactions = message.transactionLog\n              await database.applyTransactions(newTransactions)\n\n              if (!database.init) {\n                this.state.dbIdToHash[dbId] = dbNameHash\n                database.dbId = dbId\n                database.init = true\n                database.receivedMessage()\n              }\n\n              if (message.buildBundle) {\n                this.buildBundle(database)\n              }\n\n              // start applying next batch in queue when this one is finished applying successfully\n              database.applyTransactionsQueue.dequeue()\n              if (!database.applyTransactionsQueue.isEmpty()) {\n                const startApplyingNextBatchInQueue = database.applyTransactionsQueue.peek()\n                startApplyingNextBatchInQueue()\n              }\n\n              break\n            }\n\n            case 'SignOut':\n            case 'UpdateUser':\n            case 'DeleteUser':\n            case 'CreateDatabase':\n            case 'GetDatabase':\n            case 'OpenDatabase':\n            case 'GetDatabases':\n            case 'Insert':\n            case 'Update':\n            case 'Delete':\n            case 'BatchTransaction':\n            case 'Bundle':\n            case 'ValidateKey':\n            case 'GetPasswordSalts':\n            case 'PurchaseSubscription':\n            case 'CancelSubscription':\n            case 'ResumeSubscription':\n            case 'UpdatePaymentMethod': {\n              const requestId = message.requestId\n\n              if (!requestId) return console.warn('Missing request id')\n\n              const request = this.requests[requestId]\n              if (!request) return console.warn(`Request ${requestId} no longer exists!`)\n              else if (!request.promiseResolve || !request.promiseReject) return\n\n              const response = message.response\n\n              const successfulResponse = response && response.status === statusCodes['Success']\n\n              if (!successfulResponse) return request.promiseReject(response)\n              else return request.promiseResolve(response)\n            }\n\n            default: {\n              console.log('Received unknown message from backend:' + JSON.stringify(message))\n              break\n            }\n          }\n        } catch (e) {\n          if (!this.connectionResolved) {\n            this.close()\n            reject(new WebSocketError(e.message, session.username))\n          } else {\n            console.warn('Error handling message: ', e)\n          }\n        }\n      }\n\n      ws.onclose = async (e) => {\n        if (timeout) return\n\n        const serviceRestart = e.code === statusCodes['Service Restart']\n        const clientDisconnected = e.code === statusCodes['No Pong Received']\n        const attemptToReconnect = serviceRestart || clientDisconnected || !e.wasClean // closed without explicit call to ws.close()\n\n        if (attemptToReconnect) {\n          const delay = (serviceRestart && !reconnectDelay)\n            ? 0\n            : (reconnectDelay ? reconnectDelay + BACKOFF_RETRY_DELAY : 1000)\n\n          this.reconnecting = true\n          await this.reconnect(resolve, reject, session, seedString, rememberMe, delay, !this.reconnected && state)\n        } else if (e.code === statusCodes['Client Already Connected']) {\n          reject(new WebSocketError(wsAlreadyConnected, session.username))\n        } else {\n          this.init()\n        }\n      }\n    })\n  }\n\n  async reconnect(resolveConnection, rejectConnection, session, seedString, rememberMe, reconnectDelay, currentState) {\n    try {\n      const retryDelay = Math.min(reconnectDelay, MAX_RETRY_DELAY)\n      console.log(`Connection to server lost. Attempting to reconnect in ${retryDelay / 1000} second${retryDelay !== 1000 ? 's' : ''}...`)\n\n      const dbsToReopen = []\n\n      // as soon as one reconnect succeeds, resolves all the way up the stack and all reconnects succeed\n      resolveConnection(await new Promise((resolve, reject) => setTimeout(\n        async () => {\n          try {\n            const state = currentState || {\n              databases: { ...this.state.databases },\n              dbIdToHash: { ...this.state.dbIdToHash },\n              dbNameToHash: { ...this.state.dbNameToHash }\n            }\n\n            for (const dbNameHash in state.databases) {\n              state.databases[dbNameHash].init = false\n              dbsToReopen.push(dbNameHash)\n            }\n\n            this.init()\n            this.reconnecting = true\n\n            const result = await this.connect(session, seedString, rememberMe, reconnectDelay, state)\n\n            this.reconnected = true\n\n            // only reopen databases on the first call to reconnect()\n            if (!currentState) await this.reopenDatabases(dbsToReopen, 1000)\n\n            resolve(result)\n          } catch (e) {\n            reject(e)\n          }\n        },\n        retryDelay\n      )))\n    } catch (e) {\n      rejectConnection(e)\n    }\n  }\n\n  async reopenDatabases(dbsToReopen, retryDelay) {\n    try {\n      const openDatabasePromises = []\n\n      for (const dbNameHash of dbsToReopen) {\n        const database = this.state.databases[dbNameHash]\n\n        if (!database.init) {\n          const action = 'OpenDatabase'\n          const params = { dbNameHash, reopenAtSeqNo: database.lastSeqNo }\n          openDatabasePromises.push(this.request(action, params))\n        }\n      }\n\n      await Promise.all(openDatabasePromises)\n    } catch (e) {\n\n      // keep attempting to reopen on failure\n      await new Promise(resolve => setTimeout(\n        async () => {\n          await this.reopenDatabases(dbsToReopen, retryDelay + BACKOFF_RETRY_DELAY)\n          resolve()\n        },\n        Math.min(retryDelay, MAX_RETRY_DELAY)\n      ))\n    }\n  }\n\n  heartbeat() {\n    clearTimeout(this.pingTimeout)\n\n    const LATENCY_BUFFER = 3000\n\n    this.pingTimeout = setTimeout(() => {\n      if (this.ws) this.ws.close(statusCodes['No Pong Received'])\n    }, 30000 + LATENCY_BUFFER)\n  }\n\n  close(code) {\n    this.ws\n      ? this.ws.close(code)\n      : this.init()\n  }\n\n  async signOut() {\n    const username = this.session.username\n    const connectionResolved = this.connectionResolved\n    const rejectConnection = this.rejectConnection\n\n    try {\n      localData.signOutSession(this.rememberMe, username)\n\n      const sessionId = this.session.sessionId\n\n      if (this.reconnecting) throw new errors.Reconnecting\n\n      const action = 'SignOut'\n      const params = { sessionId }\n      await this.request(action, params)\n\n      this.close()\n\n      if (!connectionResolved && rejectConnection) {\n        rejectConnection(new WebSocketError('Canceled', username))\n      }\n\n    } catch (e) {\n      if (!connectionResolved && rejectConnection) {\n        rejectConnection(new WebSocketError('Canceled', username))\n      }\n\n      throw e\n    }\n  }\n\n  async setKeys(seedString) {\n    if (this.keys.init) return\n    if (!seedString) throw new WebSocketError('Missing seed', this.session.username)\n    if (!this.keys.salts) throw new WebSocketError('Missing salts', this.session.username)\n    if (!this.seedString) this.seedString = seedString\n\n    const seed = base64.decode(seedString)\n    const masterKey = await crypto.hkdf.importHkdfKey(seed)\n\n    const salts = this.keys.salts\n    this.keys.encryptionKey = await crypto.aesGcm.importKeyFromMaster(masterKey, base64.decode(salts.encryptionKeySalt))\n    this.keys.dhPrivateKey = await crypto.diffieHellman.importKeyFromMaster(masterKey, base64.decode(salts.dhKeySalt))\n    this.keys.hmacKey = await crypto.hmac.importKeyFromMaster(masterKey, base64.decode(salts.hmacKeySalt))\n\n    const userData = await this.validateKey()\n    this.userData = userData\n\n    this.keys.init = true\n\n    this.resolveConnection()\n    this.connectionResolved = true\n  }\n\n  async validateKey() {\n    const sharedKey = await crypto.diffieHellman.getSharedKeyWithServer(this.keys.dhPrivateKey)\n\n    const validationMessage = base64.encode(await crypto.aesGcm.decrypt(sharedKey, this.encryptedValidationMessage))\n\n    const action = 'ValidateKey'\n    const params = { validationMessage }\n\n    const response = await this.request(action, params)\n    const userData = response.data\n    return userData\n  }\n\n  async request(action, params) {\n    // generate a new requestId\n    const requestId = uuidv4()\n    this.requests[requestId] = {}\n\n    // get a promise that is resolved when the WebSocket\n    // receives a response for this requestId — the promise\n    // would time out of x seconds\n    const responseWatcher = this.watch(requestId)\n\n    // send the request on the WebSocket\n    this.ws.send(JSON.stringify({\n      requestId,\n      action,\n      params\n    }))\n\n    // wait for the response to arrive\n    try {\n      const response = await responseWatcher\n      return response\n    } catch (e) {\n      // process any errors and re-throw them\n      if (e.status === statusCodes['Too Many Requests']) throw new errors.TooManyRequests(e.data.retryDelay)\n      else throw new RequestFailed(action, e)\n    }\n  }\n\n  async watch(requestId) {\n    const response = await new Promise((resolve, reject) => {\n      this.requests[requestId].promiseResolve = resolve\n      this.requests[requestId].promiseReject = reject\n\n      setTimeout(() => { reject(new Error('timeout')) }, 10000)\n    })\n\n    delete this.requests[requestId]\n    return response\n  }\n\n  async buildBundle(database) {\n    const bundle = {\n      items: database.items,\n      itemsIndex: database.itemsIndex.array\n    }\n    const plaintextString = JSON.stringify(bundle)\n\n    const dbId = database.dbId\n    const lastSeqNo = database.lastSeqNo\n    const dbKey = database.dbKey\n\n    const itemKeyPromises = []\n    for (let i = 0; i < bundle.itemsIndex.length; i++) {\n      const itemId = bundle.itemsIndex[i].itemId\n      itemKeyPromises.push(crypto.hmac.signString(this.keys.hmacKey, itemId))\n    }\n    const itemKeys = await Promise.all(itemKeyPromises)\n\n    const compressedString = LZString.compress(plaintextString)\n    const base64Bundle = await crypto.aesGcm.encryptString(dbKey, compressedString)\n\n    const action = 'Bundle'\n    const params = { dbId, seqNo: lastSeqNo, bundle: base64Bundle, keys: itemKeys }\n    this.request(action, params)\n  }\n}\n\nexport default new Connection()\n","import base64 from 'base64-arraybuffer'\nimport api from './api'\nimport ws from './ws'\nimport crypto from './Crypto'\nimport localData from './localData'\nimport config from './config'\nimport errors from './errors'\nimport statusCodes from './statusCodes'\nimport { objectHasOwnProperty, getWsUrl } from './utils'\n\nconst MAX_PASSWORD_CHAR_LENGTH = 1000\nconst MIN_PASSWORD_CHAR_LENGTH = 6\n\nconst _parseGenericErrors = (e) => {\n  if (e.response) {\n    if (e.response.data === 'App ID not valid') {\n      throw new errors.AppIdNotValid\n    } else if (e.response.data === 'UserNotFound') {\n      throw new errors.UserNotFound\n    } else if (e.response.status === statusCodes['Internal Server Error']) {\n      throw new errors.InternalServerError\n    } else if (e.response.status === statusCodes['Gateway Timeout']) {\n      throw new errors.Timeout\n    }\n  } else if (e.message && e.message.indexOf('timeout') !== -1) {\n    throw new errors.Timeout\n  }\n}\n\nconst _connectWebSocket = async (session, seed, rememberMe) => {\n  try {\n    await ws.connect(session, seed, rememberMe)\n  } catch (e) {\n    _parseGenericErrors(e)\n\n    if (e.message === 'Web Socket already connected') {\n      throw new errors.UserAlreadySignedIn(e.username)\n    }\n\n    throw e\n  }\n}\n\nconst _parseGenericUsernamePasswordError = (e) => {\n  if (e.response && e.response.data.error === 'UsernameTooLong') {\n    throw new errors.UsernameTooLong(e.response.data.maxLen)\n  } else if (e.response && e.response.data.error === 'PasswordAttemptLimitExceeded') {\n    throw new errors.PasswordAttemptLimitExceeded(e.response.data.delay)\n  }\n}\n\nconst _parseUserResponseError = (e, username) => {\n  _parseGenericErrors(e)\n  _parseGenericUsernamePasswordError(e)\n\n  if (e.response) {\n    const data = e.response.data\n\n    switch (data) {\n      case 'UsernameAlreadyExists':\n        throw new errors.UsernameAlreadyExists(username)\n\n      case 'TrialExceededLimit':\n        throw new errors.TrialExceededLimit\n\n      case 'CurrentPasswordIncorrect':\n        throw new errors.CurrentPasswordIncorrect\n\n      default:\n      // continue\n    }\n\n    switch (data.error) {\n      case 'EmailNotValid':\n        throw new errors.EmailNotValid\n\n      case 'ProfileMustBeObject':\n        throw new errors.ProfileMustBeObject\n\n      case 'ProfileKeyTooLong':\n        throw new errors.ProfileKeyTooLong(data.maxLen, data.key)\n\n      case 'ProfileValueMustBeString':\n        throw new errors.ProfileValueMustBeString(data.key, data.value)\n\n      case 'ProfileValueCannotBeBlank':\n        throw new errors.ProfileValueCannotBeBlank(data.key)\n\n      case 'ProfileValueTooLong':\n        throw new errors.ProfileValueTooLong(data.maxLen, data.key, data.value)\n\n      case 'ProfileHasTooManyKeys':\n        throw new errors.ProfileHasTooManyKeys(data.maxKeys)\n\n      case 'ProfileCannotBeEmpty':\n        throw new errors.ProfileCannotBeEmpty\n    }\n  }\n\n  throw e\n}\n\nconst _validateUsername = (username) => {\n  if (typeof username !== 'string') throw new errors.UsernameMustBeString\n  if (username.length === 0) throw new errors.UsernameCannotBeBlank\n}\n\nconst _validatePassword = (password) => {\n  if (typeof password !== 'string') throw new errors.PasswordMustBeString\n  if (password.length === 0) throw new errors.PasswordCannotBeBlank\n  if (password.length < MIN_PASSWORD_CHAR_LENGTH) throw new errors.PasswordTooShort(MIN_PASSWORD_CHAR_LENGTH)\n  if (password.length > MAX_PASSWORD_CHAR_LENGTH) throw new errors.PasswordTooLong(MAX_PASSWORD_CHAR_LENGTH)\n}\n\nconst _validateSignUpOrSignInInput = (params) => {\n  if (typeof params !== 'object') throw new errors.ParamsMustBeObject\n\n  if (!objectHasOwnProperty(params, 'username')) throw new errors.UsernameMissing\n  if (!objectHasOwnProperty(params, 'password')) throw new errors.PasswordMissing\n\n  _validateUsername(params.username)\n  _validatePassword(params.password)\n\n  if (objectHasOwnProperty(params, 'rememberMe') && !config.REMEMBER_ME_OPTIONS[params.rememberMe]) {\n    throw new errors.RememberMeValueNotValid(config.REMEMBER_ME_OPTIONS)\n  }\n}\n\nconst _generatePasswordToken = async (password, seed) => {\n  const passwordSalt = crypto.scrypt.generateSalt()\n  const passwordHash = await crypto.scrypt.hash(password, passwordSalt)\n\n  const passwordHkdfKey = await crypto.hkdf.importHkdfKeyFromString(passwordHash)\n\n  const passwordTokenSalt = crypto.hkdf.generateSalt()\n  const passwordToken = await crypto.hkdf.getPasswordToken(passwordHkdfKey, passwordTokenSalt)\n\n  const passwordBasedEncryptionKeySalt = crypto.hkdf.generateSalt()\n  const passwordBasedEncryptionKey = await crypto.aesGcm.getPasswordBasedEncryptionKey(\n    passwordHkdfKey, passwordBasedEncryptionKeySalt)\n\n  const passwordEncryptedSeed = await crypto.aesGcm.encrypt(passwordBasedEncryptionKey, seed)\n\n  const passwordSalts = {\n    passwordSalt: base64.encode(passwordSalt),\n    passwordTokenSalt: base64.encode(passwordTokenSalt)\n  }\n\n  const passwordBasedBackup = {\n    passwordBasedEncryptionKeySalt: base64.encode(passwordBasedEncryptionKeySalt),\n    passwordEncryptedSeed: base64.encode(passwordEncryptedSeed)\n  }\n\n  return {\n    passwordToken,\n    passwordSalts,\n    passwordBasedBackup\n  }\n}\n\nconst _generateKeysAndSignUp = async (username, password, seed, email, profile) => {\n  const {\n    passwordToken,\n    passwordSalts,\n    passwordBasedBackup\n  } = await _generatePasswordToken(password, seed)\n\n  const masterKey = await crypto.hkdf.importHkdfKey(seed)\n\n  const encryptionKeySalt = crypto.hkdf.generateSalt()\n  const dhKeySalt = crypto.hkdf.generateSalt()\n  const hmacKeySalt = crypto.hkdf.generateSalt()\n\n  const dhPrivateKey = await crypto.diffieHellman.importKeyFromMaster(masterKey, dhKeySalt)\n  const publicKey = crypto.diffieHellman.getPublicKey(dhPrivateKey)\n\n  const keySalts = {\n    encryptionKeySalt: base64.encode(encryptionKeySalt),\n    dhKeySalt: base64.encode(dhKeySalt),\n    hmacKeySalt: base64.encode(hmacKeySalt),\n  }\n\n  try {\n    const session = await api.auth.signUp(\n      username,\n      passwordToken,\n      publicKey,\n      passwordSalts,\n      keySalts,\n      email,\n      profile,\n      passwordBasedBackup\n    )\n    return session\n  } catch (e) {\n    _parseUserResponseError(e, username)\n  }\n}\n\nconst _buildUserResult = ({ username, userId, authToken, email, profile, protectedProfile, usedTempPassword, userData }) => {\n  const result = { username, userId, authToken }\n\n  if (email) result.email = email\n  if (profile) result.profile = profile\n  if (protectedProfile) result.protectedProfile = protectedProfile\n  if (usedTempPassword) result.usedTempPassword = usedTempPassword\n\n  if (userData) {\n    const { creationDate, stripeData } = userData\n    if (creationDate) result.creationDate = creationDate\n\n    if (stripeData) {\n      const { paymentsMode, subscriptionStatus, cancelSubscriptionAt, trialExpirationDate } = stripeData\n\n      if (paymentsMode) result.paymentsMode = paymentsMode\n      if (subscriptionStatus) result.subscriptionStatus = subscriptionStatus\n      if (cancelSubscriptionAt) result.cancelSubscriptionAt = cancelSubscriptionAt\n      if (trialExpirationDate) result.trialExpirationDate = trialExpirationDate\n    }\n  }\n\n  return result\n}\n\nconst _validateProfile = (profile) => {\n  if (typeof profile !== 'object') throw new errors.ProfileMustBeObject\n\n  let keyExists = false\n  for (const key in profile) {\n    keyExists = true\n\n    const value = profile[key]\n    if (typeof value !== 'string') throw new errors.ProfileValueMustBeString(key, value)\n    if (!value) throw new errors.ProfileValueCannotBeBlank(key)\n  }\n\n  if (!keyExists) throw new errors.ProfileCannotBeEmpty\n}\n\nconst _validateSignUpInput = (params) => {\n  _validateSignUpOrSignInInput(params)\n\n  if (params.profile) _validateProfile(params.profile)\n  if (params.email && typeof params.email !== 'string') throw new errors.EmailNotValid\n}\n\nconst signUp = async (params) => {\n  try {\n    _validateSignUpInput(params)\n\n    const { password, profile, rememberMe = 'session' } = params\n\n    const username = params.username.toLowerCase()\n    const email = params.email && params.email.toLowerCase()\n\n    const appId = config.getAppId()\n    const seed = await crypto.generateSeed()\n\n    const { sessionId, creationDate, expirationDate, userId, authToken } = await _generateKeysAndSignUp(username, password, seed, email, profile)\n    const session = { username, sessionId, creationDate, expirationDate, authToken }\n\n    const seedString = base64.encode(seed)\n\n    localData.saveSeedString(rememberMe, appId, username, seedString)\n    localData.signInSession(rememberMe, username, sessionId, creationDate, expirationDate)\n\n    await _connectWebSocket(session, seedString, rememberMe)\n\n    return _buildUserResult({ username, userId, authToken, email, profile, userData: ws.userData })\n  } catch (e) {\n\n    switch (e.name) {\n      case 'ParamsMustBeObject':\n      case 'UsernameMissing':\n      case 'UsernameAlreadyExists':\n      case 'UsernameCannotBeBlank':\n      case 'UsernameMustBeString':\n      case 'UsernameTooLong':\n      case 'PasswordMissing':\n      case 'PasswordCannotBeBlank':\n      case 'PasswordTooShort':\n      case 'PasswordTooLong':\n      case 'PasswordMustBeString':\n      case 'EmailNotValid':\n      case 'ProfileMustBeObject':\n      case 'ProfileCannotBeEmpty':\n      case 'ProfileHasTooManyKeys':\n      case 'ProfileKeyTooLong':\n      case 'ProfileValueMustBeString':\n      case 'ProfileValueCannotBeBlank':\n      case 'ProfileValueTooLong':\n      case 'RememberMeValueNotValid':\n      case 'TrialExceededLimit':\n      case 'AppIdNotSet':\n      case 'AppIdNotValid':\n      case 'UserAlreadySignedIn':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.UnknownServiceUnavailable(e)\n    }\n\n  }\n}\n\nconst signOut = async () => {\n  try {\n    if (!ws.session.username) throw new errors.UserNotSignedIn\n\n    try {\n      await ws.signOut()\n    } catch (e) {\n      _parseGenericErrors(e)\n      throw e\n    }\n\n  } catch (e) {\n\n    switch (e.name) {\n      case 'UserNotSignedIn':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.UnknownServiceUnavailable(e)\n    }\n  }\n}\n\nconst _getSeedStringFromPasswordBasedBackup = async (passwordHkdfKey, passwordBasedBackup) => {\n  const { passwordBasedEncryptionKeySalt, passwordEncryptedSeed } = passwordBasedBackup\n\n  const passwordBasedEncryptionKey = await crypto.aesGcm.getPasswordBasedEncryptionKey(\n    passwordHkdfKey, base64.decode(passwordBasedEncryptionKeySalt))\n\n  const seedFromBackup = await crypto.aesGcm.decrypt(passwordBasedEncryptionKey, base64.decode(passwordEncryptedSeed))\n  const seedStringFromBackup = base64.encode(seedFromBackup)\n\n  return seedStringFromBackup\n}\n\nconst _signInWrapper = async (username, passwordToken) => {\n  try {\n    const apiSignInResult = await api.auth.signIn(username, passwordToken)\n    return apiSignInResult\n  } catch (e) {\n    _parseGenericErrors(e)\n    _parseGenericUsernamePasswordError(e)\n\n    if (e.response && e.response.data === 'Invalid password') {\n      throw new errors.UsernameOrPasswordMismatch\n    } else if (e.response && e.response.data === 'User pending deletion') {\n      throw new errors.UserPendingDeletion\n    }\n\n    throw e\n  }\n}\n\nconst _getPasswordSaltsOverRestEndpoint = async (username) => {\n  try {\n    const passwordSalts = await api.auth.getPasswordSalts(username)\n    return passwordSalts\n  } catch (e) {\n    _parseGenericErrors(e)\n    _parseGenericUsernamePasswordError(e)\n\n    if (e.response && e.response.data === 'User not found') {\n      throw new errors.UsernameOrPasswordMismatch\n    }\n\n    throw e\n  }\n}\n\nconst _getPasswordSaltsOverWebSocket = async () => {\n  try {\n    const action = 'GetPasswordSalts'\n    const passwordSaltsResponse = await ws.request(action)\n    return passwordSaltsResponse.data\n  } catch (e) {\n    _parseGenericErrors(e)\n    throw e\n  }\n}\n\nconst _rebuildPasswordToken = async (password, passwordSalts) => {\n  const { passwordSalt, passwordTokenSalt } = passwordSalts\n\n  const passwordHash = await crypto.scrypt.hash(password, new Uint8Array(base64.decode(passwordSalt)))\n  const passwordHkdfKey = await crypto.hkdf.importHkdfKeyFromString(passwordHash)\n  const passwordToken = await crypto.hkdf.getPasswordToken(passwordHkdfKey, base64.decode(passwordTokenSalt))\n\n  return { passwordHkdfKey, passwordToken }\n}\n\nconst signIn = async (params) => {\n  try {\n    _validateSignUpOrSignInInput(params)\n\n    const username = params.username.toLowerCase()\n    const { password, rememberMe = 'session' } = params\n\n    const appId = config.getAppId()\n\n    const passwordSalts = await _getPasswordSaltsOverRestEndpoint(username)\n    const { passwordHkdfKey, passwordToken } = await _rebuildPasswordToken(password, passwordSalts)\n\n    const apiSignInResult = await _signInWrapper(username, passwordToken)\n    const { userId, email, profile, passwordBasedBackup, protectedProfile, usedTempPassword } = apiSignInResult\n    const session = {\n      ...apiSignInResult.session,\n      username\n    }\n\n    const savedSeedString = localData.getSeedString(appId, username)\n\n    let seedStringFromBackup\n    if (!savedSeedString && usedTempPassword) {\n      throw new errors.KeyNotFound(\"Your key was not found. You can only sign in with a temporary password from a device you've signed in from before.\")\n    } else if (!savedSeedString) {\n      seedStringFromBackup = await _getSeedStringFromPasswordBasedBackup(passwordHkdfKey, passwordBasedBackup)\n      localData.saveSeedString(rememberMe, appId, username, seedStringFromBackup)\n    }\n\n    const seedString = savedSeedString || seedStringFromBackup\n\n    localData.signInSession(rememberMe, username, session.sessionId, session.creationDate, session.expirationDate)\n\n    await _connectWebSocket(session, seedString, rememberMe)\n\n    return _buildUserResult({\n      username, userId, authToken: session.authToken, email,\n      profile, protectedProfile, usedTempPassword, userData: ws.userData\n    })\n  } catch (e) {\n\n    switch (e.name) {\n      case 'ParamsMustBeObject':\n      case 'UsernameMissing':\n      case 'UsernameOrPasswordMismatch':\n      case 'UserPendingDeletion':\n      case 'UsernameCannotBeBlank':\n      case 'UsernameTooLong':\n      case 'UsernameMustBeString':\n      case 'PasswordMissing':\n      case 'PasswordCannotBeBlank':\n      case 'PasswordTooShort':\n      case 'PasswordTooLong':\n      case 'PasswordMustBeString':\n      case 'PasswordAttemptLimitExceeded':\n      case 'RememberMeValueNotValid':\n      case 'KeyNotFound':\n      case 'AppIdNotSet':\n      case 'AppIdNotValid':\n      case 'UserAlreadySignedIn':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.UnknownServiceUnavailable(e)\n    }\n\n  }\n}\n\nconst init = async (params) => {\n  try {\n    if (!window.crypto.subtle) throw new errors.WebCryptoUnavailable\n\n    if (typeof params !== 'object') throw new errors.ParamsMustBeObject\n\n    if (!objectHasOwnProperty(params, 'appId')) throw new errors.AppIdMissing\n\n    const { appId } = params\n    config.configure({ appId })\n\n    const session = await signInWithSession(appId)\n    return session\n  } catch (e) {\n\n    switch (e.name) {\n      case 'WebCryptoUnavailable':\n      case 'ParamsMustBeObject':\n      case 'AppIdMissing':\n      case 'AppIdAlreadySet':\n      case 'AppIdMustBeString':\n      case 'AppIdCannotBeBlank':\n      case 'AppIdNotValid':\n      case 'UserAlreadySignedIn':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.UnknownServiceUnavailable(e)\n    }\n\n  }\n}\n\nconst signInWithSession = async (appId) => {\n  try {\n    const currentSession = localData.getCurrentSession()\n    if (!currentSession) return {}\n\n    const { signedIn, sessionId, creationDate, expirationDate, rememberMe } = currentSession\n    const savedSeedString = localData.getSeedString(appId, currentSession.username)\n\n    if (!signedIn || !savedSeedString || new Date() > new Date(expirationDate)) {\n      return { lastUsedUsername: currentSession.username }\n    }\n\n    let apiSignInWithSessionResult\n    try {\n      apiSignInWithSessionResult = await api.auth.signInWithSession(sessionId)\n    } catch (e) {\n      _parseGenericErrors(e)\n\n      if (e.response && e.response.data === 'Session invalid') {\n        return { lastUsedUsername: currentSession.username }\n      }\n\n      throw e\n    }\n    const { userId, authToken, username, email, profile, protectedProfile } = apiSignInWithSessionResult\n\n    // overwrite local data if username has been changed on server\n    if (username !== currentSession.username) {\n      localData.saveSeedString(rememberMe, appId, username, savedSeedString)\n      localData.removeSeedString(appId, currentSession.username)\n    }\n\n    // expirationDate should have been extended\n    localData.signInSession(rememberMe, username, sessionId, creationDate, apiSignInWithSessionResult.expirationDate)\n\n    // enable idempotent calls to init()\n    if (ws.connectionResolved) {\n      if (ws.session.sessionId === sessionId) {\n        return { user: _buildUserResult({ username, userId, authToken: ws.session.authToken, email, profile, protectedProfile, userData: ws.userData }) }\n      } else {\n        throw new errors.UserAlreadySignedIn(ws.session.username)\n      }\n    }\n\n    const session = { ...currentSession, authToken }\n    await _connectWebSocket(session, savedSeedString, rememberMe)\n\n    return { user: _buildUserResult({ username, userId, authToken, email, profile, protectedProfile, userData: ws.userData }) }\n  } catch (e) {\n    _parseGenericErrors(e)\n    throw e\n  }\n}\n\nconst _validateUpdatedUserInput = (params) => {\n  if (!objectHasOwnProperty(params, 'username')\n    && !objectHasOwnProperty(params, 'newPassword')\n    && !objectHasOwnProperty(params, 'email')\n    && !objectHasOwnProperty(params, 'profile')\n  ) {\n    throw new errors.ParamsMissing\n  }\n\n  const { username, currentPassword, newPassword, email, profile } = params\n\n  if (objectHasOwnProperty(params, 'username')) _validateUsername(username)\n  if (objectHasOwnProperty(params, 'newPassword')) {\n    if (!currentPassword) throw new errors.CurrentPasswordMissing\n\n    _validatePassword(currentPassword)\n    _validatePassword(newPassword)\n  }\n\n  // if email or profile are falsey, will be set to false\n  if (email && typeof email !== 'string') throw new errors.EmailNotValid\n  if (profile) _validateProfile(profile)\n}\n\nconst _buildUpdateUserParams = async (params) => {\n  if (params.username) params.username = params.username.toLowerCase()\n\n  if (params.newPassword) {\n    const [currentPasswordSalts, newPasswordPromise] = await Promise.all([\n      _getPasswordSaltsOverWebSocket(),\n      _generatePasswordToken(params.newPassword, base64.decode(ws.seedString))\n    ])\n\n    // current password\n    const { passwordToken } = await _rebuildPasswordToken(params.currentPassword, currentPasswordSalts)\n    params.currentPasswordToken = passwordToken\n    delete params.currentPassword\n\n    // new password\n    params.passwordToken = newPasswordPromise.passwordToken\n    params.passwordSalts = newPasswordPromise.passwordSalts\n    params.passwordBasedBackup = newPasswordPromise.passwordBasedBackup\n    delete params.newPassword\n  }\n\n  if (params.email) params.email = params.email.toLowerCase()\n  else if (objectHasOwnProperty(params, 'email')) params.email = false // marks email for deletion\n\n  if (!params.profile && objectHasOwnProperty(params, 'profile')) params.profile = false // marks profile for deletion\n\n  return params\n}\n\nconst updateUser = async (params) => {\n  try {\n    if (typeof params !== 'object') throw new errors.ParamsMustBeObject\n\n    _validateUpdatedUserInput(params)\n\n    if (!ws.keys.init) throw new errors.UserNotSignedIn\n    const startingSeedString = ws.seedString\n\n    const action = 'UpdateUser'\n    const finalParams = await _buildUpdateUserParams({ ...params })\n\n    if (ws.reconnecting) throw new errors.Reconnecting\n    if (!ws.keys.init) throw new errors.UserNotSignedIn\n\n    // ensures same user still attempting to update (seed should remain constant)\n    if (startingSeedString !== ws.seedString) throw new errors.ServiceUnavailable\n\n    try {\n      if (finalParams.username) {\n        localData.saveSeedString(ws.rememberMe, config.getAppId(), finalParams.username, ws.seedString)\n      }\n\n      await ws.request(action, finalParams)\n    } catch (e) {\n      _parseUserResponseError(e, finalParams.username)\n    }\n  } catch (e) {\n\n    switch (e.name) {\n      case 'ParamsMustBeObject':\n      case 'ParamsMissing':\n      case 'UsernameAlreadyExists':\n      case 'UsernameMustBeString':\n      case 'UsernameCannotBeBlank':\n      case 'UsernameTooLong':\n      case 'CurrentPasswordMissing':\n      case 'CurrentPasswordIncorrect':\n      case 'PasswordAttemptLimitExceeded':\n      case 'PasswordMustBeString':\n      case 'PasswordCannotBeBlank':\n      case 'PasswordTooShort':\n      case 'PasswordTooLong':\n      case 'EmailNotValid':\n      case 'ProfileMustBeObject':\n      case 'ProfileCannotBeEmpty':\n      case 'ProfileHasTooManyKeys':\n      case 'ProfileKeyTooLong':\n      case 'ProfileValueMustBeString':\n      case 'ProfileValueCannotBeBlank':\n      case 'ProfileValueTooLong':\n      case 'AppIdNotSet':\n      case 'AppIdNotValid':\n      case 'UserNotFound':\n      case 'UserNotSignedIn':\n      case 'TooManyRequests':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.UnknownServiceUnavailable(e)\n    }\n\n  }\n}\n\nconst deleteUser = async () => {\n  try {\n    if (ws.reconnecting) throw new errors.Reconnecting\n    if (!ws.keys.init) throw new errors.UserNotSignedIn\n\n    const username = ws.session.username\n    localData.removeSeedString(username)\n    localData.removeCurrentSession()\n\n    try {\n      const action = 'DeleteUser'\n      await ws.request(action)\n    } catch (e) {\n      _parseGenericErrors(e)\n      throw e\n    }\n\n    ws.close()\n\n  } catch (e) {\n\n    switch (e.name) {\n      case 'UserNotSignedIn':\n      case 'UserNotFound':\n      case 'TooManyRequests':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.UnknownServiceUnavailable(e)\n    }\n\n  }\n}\n\nconst forgotPassword = async (params) => {\n  try {\n    if (typeof params !== 'object') throw new errors.ParamsMustBeObject\n    if (!objectHasOwnProperty(params, 'username')) throw new errors.UsernameMissing\n\n    _validateUsername(params.username)\n    const username = params.username.toLowerCase()\n\n    const appId = config.getAppId()\n\n    const seedString = localData.getSeedString(appId, username)\n    const keyNotFoundMessage = \"Your key was not found. Forgot password only works from a device you've signed in from before.\"\n    if (!seedString) throw new errors.KeyNotFound(keyNotFoundMessage)\n    const seed = base64.decode(seedString)\n    const masterKey = await crypto.hkdf.importHkdfKey(seed)\n\n    // client makes 2 trips to server to first prove it has the correct key and then trigger the temp password email\n    const forgotPasswordWs = new WebSocket(`${getWsUrl(config.getEndpoint())}/api/auth/forgot-password?appId=${appId}&username=${username}`)\n\n    await new Promise((resolve, reject) => {\n      setTimeout(() => reject(new errors.Timeout), 15000)\n\n      forgotPasswordWs.onerror = () => reject(new errors.ServiceUnavailable)\n\n      forgotPasswordWs.onmessage = async (e) => {\n        try {\n          const message = JSON.parse(e.data)\n\n          switch (message.route) {\n            case 'ReceiveEncryptedToken': {\n              // if client decrypts encrypted token successfully, proves to server it has the user's key\n              const encryptedForgotPasswordToken = new Uint8Array(message.encryptedForgotPasswordToken.data)\n\n              const dhPrivateKey = await crypto.diffieHellman.importKeyFromMaster(masterKey, base64.decode(message.dhKeySalt))\n              const sharedKey = await crypto.diffieHellman.getSharedKeyWithServer(dhPrivateKey)\n\n              let forgotPasswordToken\n              try {\n                // if it fails to decrypt, it's almost certainly because key is incorrect\n                forgotPasswordToken = base64.encode(await crypto.aesGcm.decrypt(sharedKey, encryptedForgotPasswordToken))\n              } catch {\n                throw new errors.KeyNotFound(keyNotFoundMessage)\n              }\n\n              forgotPasswordWs.send(JSON.stringify({\n                action: 'ForgotPassword',\n                params: { forgotPasswordToken }\n              }))\n\n              break\n            }\n\n            case 'SuccessfullyForgotPassword': {\n              // server has sent the email\n              resolve()\n              break\n            }\n\n            case 'Error': {\n              const data = message.data\n\n              switch (data.name) {\n                case 'UsernameTooLong': throw new errors.UsernameTooLong(data.maxLen)\n                case 'AppIdNotValid': throw new errors.AppIdNotValid\n                case 'UserNotFound': throw new errors.UserNotFound\n                case 'UserEmailNotFound': throw new errors.UserEmailNotFound\n\n                default: {\n                  if (message.status === statusCodes['Internal Server Error']) throw new errors.ServiceUnavailable\n                  else throw new errors.UnknownServiceUnavailable(data)\n                }\n              }\n            }\n\n            case 'Ping': {\n              // ignore -- websocket connection should only exist for the life of the forgot password request\n              break\n            }\n\n            default:\n              reject(new Error(`Received unknown message from userbase-server: ${e.data}`))\n          }\n        } catch (e) {\n          reject(e)\n        }\n      }\n    })\n\n    forgotPasswordWs.close()\n\n  } catch (e) {\n\n    switch (e.name) {\n      case 'ParamsMustBeObject':\n      case 'UsernameMissing':\n      case 'UsernameMustBeString':\n      case 'UsernameCannotBeBlank':\n      case 'UsernameTooLong':\n      case 'AppIdNotSet':\n      case 'AppIdNotValid':\n      case 'KeyNotFound':\n      case 'UserNotFound':\n      case 'UserEmailNotFound':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.UnknownServiceUnavailable(e)\n\n    }\n  }\n}\n\nexport default {\n  signUp,\n  signOut,\n  signIn,\n  init,\n  updateUser,\n  deleteUser,\n  forgotPassword,\n}\n","import uuidv4 from 'uuid/v4'\nimport SortedArray from 'sorted-array'\nimport crypto from './Crypto'\nimport ws from './ws'\nimport errors from './errors'\nimport statusCodes from './statusCodes'\nimport { byteSizeOfString, Queue, objectHasOwnProperty } from './utils'\n\nconst success = 'Success'\n\nconst MAX_DB_NAME_CHAR_LENGTH = 50\nconst MAX_ITEM_ID_CHAR_LENGTH = 100\n\nconst MAX_ITEM_KB = 10\nconst TEN_KB = MAX_ITEM_KB * 1024\nconst MAX_ITEM_BYTES = TEN_KB\n\nconst _parseGenericErrors = (e) => {\n  if (e.response) {\n    if (e.response.data === 'UserNotFound') {\n      throw new errors.UserNotFound\n    } else if (e.response.status === statusCodes['Internal Server Error']) {\n      throw new errors.InternalServerError\n    } else if (e.response.status === statusCodes['Gateway Timeout']) {\n      throw new errors.Timeout\n    }\n  } else if (e.message && e.message.indexOf('timeout') !== -1) {\n    throw new errors.Timeout\n  }\n}\n\nclass UnverifiedTransaction {\n  constructor(startSeqNo) {\n    this.startSeqNo = startSeqNo\n    this.txSeqNo = null\n    this.transactions = {}\n    this.promiseResolve = null\n    this.promiseReject = null\n    this.index = null\n  }\n\n  getStartSeqNo() {\n    return this.startSeqNo\n  }\n\n  getIndex() {\n    return this.index\n  }\n\n  setIndex(index) {\n    this.index = index\n  }\n\n  async getResult(seqNo) {\n    this.txSeqNo = seqNo\n\n    const promise = new Promise((resolve, reject) => {\n      this.promiseResolve = resolve\n      this.promiseReject = reject\n\n      setTimeout(() => { reject(new Error('timeout')) }, 10000)\n    })\n\n    this.verifyPromise()\n\n    return promise\n  }\n\n  verifyPromise() {\n    if (!this.txSeqNo && this.txSeqNo != 0) {\n      return\n    }\n\n    if (!this.promiseResolve || !this.promiseReject) {\n      return\n    }\n\n    if (this.transactions[this.txSeqNo]) {\n      if (this.transactions[this.txSeqNo] == 'Success') {\n        this.promiseResolve()\n      } else {\n        this.promiseReject(this.transactions[this.txSeqNo])\n      }\n    }\n  }\n\n  addTransaction(transaction, code) {\n    if (this.transactions[transaction.seqNo]) return\n    this.transactions[transaction.seqNo] = code\n    this.verifyPromise()\n  }\n}\n\nclass Database {\n  constructor(changeHandler, receivedMessage) {\n    this.onChange = changeHandler\n\n    this.items = {}\n\n    const compareItems = (a, b) => {\n      if (a.seqNo < b.seqNo || (a.seqNo === b.seqNo && a.operationIndex < b.operationIndex)) {\n        return -1\n      }\n      if (a.seqNo > b.seqNo || (a.seqNo === b.seqNo && a.operationIndex > b.operationIndex)) {\n        return 1\n      }\n      return 0\n    }\n\n    this.itemsIndex = new SortedArray([], compareItems)\n    this.unverifiedTransactions = []\n    this.lastSeqNo = 0\n    this.init = false\n    this.dbKey = null\n    this.receivedMessage = receivedMessage\n\n    // Queue that ensures 'ApplyTransactions' executes one at a time\n    this.applyTransactionsQueue = new Queue()\n  }\n\n  async applyTransactions(transactions) {\n    for (let i = 0; i < transactions.length; i++) {\n      const transaction = transactions[i]\n      const seqNo = transaction.seqNo\n\n      // client must only apply transcations in sequence\n      if (seqNo !== this.lastSeqNo + 1) {\n        console.warn(`Client attempted to apply transaction with seq no ${seqNo} when last seq no is ${this.lastSeqNo}`)\n        continue\n      }\n\n      const transactionCode = await this.applyTransaction(this.dbKey, transaction)\n      this.lastSeqNo = seqNo\n\n      for (let j = 0; j < this.unverifiedTransactions.length; j++) {\n        if (!this.unverifiedTransactions[j] || seqNo < this.unverifiedTransactions[j].getStartSeqNo()) {\n          continue\n        }\n        this.unverifiedTransactions[j].addTransaction(transactions[i], transactionCode)\n      }\n\n      if (this.init && transactionCode === 'Success') {\n        this.onChange(this.getItems())\n      }\n    }\n\n    if (!this.init) {\n      this.onChange(this.getItems())\n    }\n  }\n\n  applyBundle(bundle, bundleSeqNo) {\n    // client must only apply bundle when opening state\n    if (this.lastSeqNo !== 0) {\n      console.warn(`Client attempted to apply bundle when last seq no is ${this.lastSeqNo}`)\n      return\n    }\n\n    for (let i = 0; i < bundle.itemsIndex.length; i++) {\n      const itemIndex = bundle.itemsIndex[i]\n      const itemId = bundle.itemsIndex[i].itemId\n      const item = bundle.items[itemId]\n\n      this.items[itemId] = item\n      this.itemsIndex.insert(itemIndex)\n    }\n\n    this.lastSeqNo = bundleSeqNo\n  }\n\n  async applyTransaction(key, transaction) {\n    const seqNo = transaction.seqNo\n    const command = transaction.command\n\n    switch (command) {\n      case 'Insert': {\n        const record = await crypto.aesGcm.decryptJson(key, transaction.record)\n        const itemId = record.id\n        const item = record.item\n\n        try {\n          this.validateInsert(itemId)\n        } catch (transactionCode) {\n          return transactionCode\n        }\n\n        return this.applyInsert(itemId, seqNo, item)\n      }\n\n      case 'Update': {\n        const record = await crypto.aesGcm.decryptJson(key, transaction.record)\n        const itemId = record.id\n        const item = record.item\n        const __v = record.__v\n\n        try {\n          this.validateUpdateOrDelete(itemId, __v)\n        } catch (transactionCode) {\n          return transactionCode\n        }\n\n        return this.applyUpdate(itemId, item, __v)\n      }\n\n      case 'Delete': {\n        const record = await crypto.aesGcm.decryptJson(key, transaction.record)\n        const itemId = record.id\n        const __v = record.__v\n\n        try {\n          this.validateUpdateOrDelete(itemId, __v)\n        } catch (transactionCode) {\n          return transactionCode\n        }\n\n        return this.applyDelete(itemId)\n      }\n\n      case 'BatchTransaction': {\n        const batch = transaction.operations\n        const recordPromises = []\n\n        for (const operation of batch) {\n          recordPromises.push(operation.record && crypto.aesGcm.decryptJson(key, operation.record))\n        }\n        const records = await Promise.all(recordPromises)\n\n        try {\n          this.validateBatchTransaction(batch, records)\n        } catch (transactionCode) {\n          return transactionCode\n        }\n\n        return this.applyBatchTransaction(seqNo, batch, records)\n      }\n\n      case 'Rollback': {\n        // no-op\n        return\n      }\n\n      default: {\n        console.warn(`Unknown command: ${command}`)\n        return\n      }\n    }\n  }\n\n  validateInsert(itemId) {\n    if (this.items[itemId]) {\n      throw new errors.ItemAlreadyExists\n    }\n  }\n\n  validateUpdateOrDelete(itemId, __v) {\n    if (!this.items[itemId]) {\n      throw new errors.ItemDoesNotExist\n    }\n\n    const currentVersion = this.getItemVersionNumber(itemId)\n    if (__v <= currentVersion) {\n      throw new errors.ItemUpdateConflict\n    }\n  }\n\n  itemExists(itemId) {\n    return objectHasOwnProperty(this.items, itemId)\n  }\n\n  applyInsert(itemId, seqNo, record, operationIndex) {\n    const item = { seqNo }\n    if (typeof operationIndex === 'number') item.operationIndex = operationIndex\n\n    this.items[itemId] = {\n      ...item,\n      record,\n      __v: 0\n    }\n    this.itemsIndex.insert({ ...item, itemId })\n    return success\n  }\n\n  applyUpdate(itemId, record, __v) {\n    this.items[itemId].record = record\n    this.items[itemId].__v = __v\n    return success\n  }\n\n  applyDelete(itemId) {\n    this.itemsIndex.remove(this.items[itemId])\n    delete this.items[itemId]\n    return success\n  }\n\n  validateBatchTransaction(batch, records) {\n    const uniqueItemIds = {}\n\n    for (let i = 0; i < batch.length; i++) {\n      const operation = batch[i]\n\n      const itemId = records[i].id\n      const __v = records[i].__v\n\n      if (uniqueItemIds[itemId]) throw new errors.OperationsConflict\n      uniqueItemIds[itemId] = true\n\n      switch (operation.command) {\n        case 'Insert':\n          this.validateInsert(itemId)\n          break\n\n        case 'Update':\n        case 'Delete':\n          this.validateUpdateOrDelete(itemId, __v)\n          break\n      }\n    }\n  }\n\n  applyBatchTransaction(seqNo, batch, records) {\n    for (let i = 0; i < batch.length; i++) {\n      const operation = batch[i]\n\n      const itemId = records[i].id\n      const item = records[i].item\n      const __v = records[i].__v\n\n      switch (operation.command) {\n        case 'Insert':\n          this.applyInsert(itemId, seqNo, item, i)\n          break\n\n        case 'Update':\n          this.applyUpdate(itemId, item, __v)\n          break\n\n        case 'Delete':\n          this.applyDelete(itemId, __v)\n          break\n      }\n    }\n\n    return success\n  }\n\n  registerUnverifiedTransaction() {\n    const unverifiedTransaction = new UnverifiedTransaction(this.lastSeqNo)\n    const i = this.unverifiedTransactions.push(unverifiedTransaction)\n    unverifiedTransaction.setIndex(i - 1)\n    return unverifiedTransaction\n  }\n\n  unregisterUnverifiedTransaction(pendingTransaction) {\n    delete this.unverifiedTransactions[pendingTransaction.getIndex()]\n  }\n\n  getItems() {\n    const result = []\n    for (let i = 0; i < this.itemsIndex.array.length; i++) {\n      const itemId = this.itemsIndex.array[i].itemId\n      const record = this.items[itemId].record\n      result.push({ itemId, item: record })\n    }\n    return result\n  }\n\n  getItemVersionNumber(itemId) {\n    return this.items[itemId].__v\n  }\n}\n\nconst _openDatabase = async (dbNameHash, changeHandler, newDatabaseParams) => {\n  try {\n    const database = ws.state.databases[dbNameHash]\n\n    let receivedMessage\n    let timeout\n    const firstMessageFromWebSocket = new Promise((resolve, reject) => {\n      receivedMessage = resolve\n      timeout = setTimeout(() => reject(new Error('timeout')), 20000)\n    })\n\n    if (!database) {\n      ws.state.databases[dbNameHash] = new Database(changeHandler, receivedMessage)\n    } else {\n\n      // safe to replace -- enables idempotent calls to openDatabase\n      database.onChange = changeHandler\n\n      // if 1 call succeeds, all idempotent calls succeed\n      const currentReceivedMessage = database.receivedMessage\n      database.receivedMessage = () => {\n        currentReceivedMessage()\n        receivedMessage()\n      }\n\n      // database is already open, can return successfully\n      if (database.init) {\n        changeHandler(database.getItems())\n        database.receivedMessage()\n        return\n      }\n    }\n\n    const action = 'OpenDatabase'\n    const params = { dbNameHash, newDatabaseParams }\n\n    try {\n      await ws.request(action, params)\n      await firstMessageFromWebSocket\n    } catch (e) {\n      clearTimeout(timeout)\n\n      if (e.response && e.response.data) {\n        const data = e.response.data\n\n        if (data === 'Database already creating') {\n          throw new errors.DatabaseAlreadyOpening\n        }\n\n        switch (data.name) {\n          case 'SubscriptionPlanNotSet':\n            throw new errors.SubscriptionPlanNotSet\n          case 'SubscriptionNotFound':\n            throw new errors.SubscriptionNotFound\n          case 'SubscribedToIncorrectPlan':\n            throw new errors.SubscribedToIncorrectPlan\n          case 'SubscriptionInactive':\n            throw new errors.SubscriptionInactive(data.subscriptionStatus)\n          case 'TrialExpired':\n            throw new errors.TrialExpired\n        }\n\n      }\n\n      throw e\n    }\n\n  } catch (e) {\n    _parseGenericErrors(e)\n    throw e\n  }\n}\n\nconst _createDatabase = async (dbName) => {\n  const dbId = uuidv4()\n\n  const dbKey = await crypto.aesGcm.generateKey()\n  const dbKeyString = await crypto.aesGcm.getKeyStringFromKey(dbKey)\n\n  const [encryptedDbKey, encryptedDbName] = await Promise.all([\n    crypto.aesGcm.encryptString(ws.keys.encryptionKey, dbKeyString),\n    crypto.aesGcm.encryptString(dbKey, dbName)\n  ])\n\n  const newDatabaseParams = {\n    dbId,\n    encryptedDbKey,\n    encryptedDbName\n  }\n  return newDatabaseParams\n}\n\nconst _validateDbInput = (params) => {\n  if (typeof params !== 'object') throw new errors.ParamsMustBeObject\n\n  if (!objectHasOwnProperty(params, 'databaseName')) throw new errors.DatabaseNameMissing\n\n  const dbName = params.databaseName\n\n  if (typeof dbName !== 'string') throw new errors.DatabaseNameMustBeString\n  if (dbName.length === 0) throw new errors.DatabaseNameCannotBeBlank\n  if (dbName.length > MAX_DB_NAME_CHAR_LENGTH) throw new errors.DatabaseNameTooLong(MAX_DB_NAME_CHAR_LENGTH)\n\n  if (ws.reconnecting) throw new errors.Reconnecting\n  if (!ws.keys.init) throw new errors.UserNotSignedIn\n}\n\nconst openDatabase = async (params) => {\n  try {\n    _validateDbInput(params)\n    if (!objectHasOwnProperty(params, 'changeHandler')) throw new errors.ChangeHandlerMissing\n\n    const { databaseName, changeHandler } = params\n\n    if (typeof changeHandler !== 'function') throw new errors.ChangeHandlerMustBeFunction\n\n    const dbNameHash = ws.state.dbNameToHash[databaseName] || await crypto.hmac.signString(ws.keys.hmacKey, databaseName)\n    ws.state.dbNameToHash[databaseName] = dbNameHash // eslint-disable-line require-atomic-updates\n\n    const newDatabaseParams = await _createDatabase(databaseName)\n    await _openDatabase(dbNameHash, changeHandler, newDatabaseParams)\n  } catch (e) {\n\n    switch (e.name) {\n      case 'ParamsMustBeObject':\n      case 'DatabaseAlreadyOpening':\n      case 'DatabaseNameMustBeString':\n      case 'DatabaseNameMissing':\n      case 'DatabaseNameCannotBeBlank':\n      case 'DatabaseNameTooLong':\n      case 'ChangeHandlerMissing':\n      case 'ChangeHandlerMustBeFunction':\n      case 'UserNotSignedIn':\n      case 'UserNotFound':\n      case 'SubscriptionPlanNotSet':\n      case 'SubscriptionNotFound':\n      case 'SubscribedToIncorrectPlan':\n      case 'SubscriptionInactive':\n      case 'TrialExpired':\n      case 'TooManyRequests':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.UnknownServiceUnavailable(e)\n    }\n  }\n}\n\nconst getOpenDb = (dbName) => {\n  const dbNameHash = ws.state.dbNameToHash[dbName]\n  const database = ws.state.databases[dbNameHash]\n  if (!dbNameHash || !database || !database.init) throw new errors.DatabaseNotOpen\n  return database\n}\n\nconst insertItem = async (params) => {\n  try {\n    _validateDbInput(params)\n\n    const database = getOpenDb(params.databaseName)\n\n    const action = 'Insert'\n    const insertParams = await _buildInsertParams(database, params)\n\n    await postTransaction(database, action, insertParams)\n\n  } catch (e) {\n\n    switch (e.name) {\n      case 'ParamsMustBeObject':\n      case 'DatabaseNotOpen':\n      case 'DatabaseNameMissing':\n      case 'DatabaseNameMustBeString':\n      case 'DatabaseNameCannotBeBlank':\n      case 'DatabaseNameTooLong':\n      case 'ItemIdMustBeString':\n      case 'ItemIdCannotBeBlank':\n      case 'ItemIdTooLong':\n      case 'ItemMissing':\n      case 'ItemInvalid':\n      case 'ItemTooLarge':\n      case 'ItemAlreadyExists':\n      case 'UserNotSignedIn':\n      case 'UserNotFound':\n      case 'TooManyRequests':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.UnknownServiceUnavailable(e)\n    }\n\n  }\n}\n\nconst _buildInsertParams = async (database, params) => {\n  if (!objectHasOwnProperty(params, 'item')) throw new errors.ItemMissing\n\n  const { item, itemId } = params\n\n  if (objectHasOwnProperty(params, 'itemId')) {\n    if (typeof itemId !== 'string') throw new errors.ItemIdMustBeString\n    if (itemId.length === 0) throw new errors.ItemIdCannotBeBlank\n    if (itemId.length > MAX_ITEM_ID_CHAR_LENGTH) throw new errors.ItemIdTooLong(MAX_ITEM_ID_CHAR_LENGTH)\n  }\n\n  const itemString = JSON.stringify(item)\n  if (!itemString) throw new errors.ItemInvalid\n  if (byteSizeOfString(itemString) > MAX_ITEM_BYTES) throw new errors.ItemTooLarge(MAX_ITEM_KB)\n\n  const id = itemId || uuidv4()\n\n  const itemKey = await crypto.hmac.signString(ws.keys.hmacKey, id)\n  const itemRecord = { id, item }\n  const encryptedItem = await crypto.aesGcm.encryptJson(database.dbKey, itemRecord)\n\n  return { itemKey, encryptedItem }\n}\n\nconst updateItem = async (params) => {\n  try {\n    _validateDbInput(params)\n\n    const database = getOpenDb(params.databaseName)\n\n    const action = 'Update'\n    const updateParams = await _buildUpdateParams(database, params)\n\n    await postTransaction(database, action, updateParams)\n  } catch (e) {\n\n    switch (e.name) {\n      case 'ParamsMustBeObject':\n      case 'DatabaseNotOpen':\n      case 'DatabaseNameMissing':\n      case 'DatabaseNameMustBeString':\n      case 'DatabaseNameCannotBeBlank':\n      case 'DatabaseNameTooLong':\n      case 'ItemIdMissing':\n      case 'ItemIdMustBeString':\n      case 'ItemIdCannotBeBlank':\n      case 'ItemIdTooLong':\n      case 'ItemMissing':\n      case 'ItemInvalid':\n      case 'ItemTooLarge':\n      case 'ItemDoesNotExist':\n      case 'ItemUpdateConflict':\n      case 'UserNotSignedIn':\n      case 'UserNotFound':\n      case 'TooManyRequests':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.UnknownServiceUnavailable\n    }\n\n  }\n}\n\nconst _buildUpdateParams = async (database, params) => {\n  if (!objectHasOwnProperty(params, 'item')) throw new errors.ItemMissing\n  if (!objectHasOwnProperty(params, 'itemId')) throw new errors.ItemIdMissing\n\n  const { item, itemId } = params\n\n  if (typeof itemId !== 'string') throw new errors.ItemIdMustBeString\n  if (itemId.length === 0) throw new errors.ItemIdCannotBeBlank\n  if (itemId.length > MAX_ITEM_ID_CHAR_LENGTH) throw new errors.ItemIdTooLong(MAX_ITEM_ID_CHAR_LENGTH)\n\n  if (!database.itemExists(itemId)) throw new errors.ItemDoesNotExist\n\n  const itemString = JSON.stringify(item)\n  if (!itemString) throw new errors.ItemInvalid\n  if (byteSizeOfString(itemString) > MAX_ITEM_BYTES) throw new errors.ItemTooLarge(MAX_ITEM_KB)\n\n  const itemKey = await crypto.hmac.signString(ws.keys.hmacKey, itemId)\n  const currentVersion = database.getItemVersionNumber(itemId)\n  const itemRecord = { id: itemId, item, __v: currentVersion + 1 }\n  const encryptedItem = await crypto.aesGcm.encryptJson(database.dbKey, itemRecord)\n\n  return { itemKey, encryptedItem }\n}\n\nconst deleteItem = async (params) => {\n  try {\n    _validateDbInput(params)\n\n    const database = getOpenDb(params.databaseName)\n\n    const action = 'Delete'\n    const deleteParams = await _buildDeleteParams(database, params)\n\n    await postTransaction(database, action, deleteParams)\n  } catch (e) {\n\n    switch (e.name) {\n      case 'ParamsMustBeObject':\n      case 'DatabaseNotOpen':\n      case 'DatabaseNameMissing':\n      case 'DatabaseNameMustBeString':\n      case 'DatabaseNameCannotBeBlank':\n      case 'DatabaseNameTooLong':\n      case 'ItemIdMissing':\n      case 'ItemIdMustBeString':\n      case 'ItemIdCannotBeBlank':\n      case 'ItemIdTooLong':\n      case 'ItemDoesNotExist':\n      case 'ItemUpdateConflict':\n      case 'UserNotSignedIn':\n      case 'UserNotFound':\n      case 'TooManyRequests':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.UnknownServiceUnavailable(e)\n    }\n\n  }\n}\n\nconst _buildDeleteParams = async (database, params) => {\n  if (!objectHasOwnProperty(params, 'itemId')) throw new errors.ItemIdMissing\n\n  const { itemId } = params\n\n  if (typeof itemId !== 'string') throw new errors.ItemIdMustBeString\n  if (itemId.length === 0) throw new errors.ItemIdCannotBeBlank\n  if (itemId.length > MAX_ITEM_ID_CHAR_LENGTH) throw new errors.ItemIdTooLong(MAX_ITEM_ID_CHAR_LENGTH)\n\n  if (!database.itemExists(itemId)) throw new errors.ItemDoesNotExist\n\n  const itemKey = await crypto.hmac.signString(ws.keys.hmacKey, itemId)\n  const currentVersion = database.getItemVersionNumber(itemId)\n  const itemRecord = { id: itemId, __v: currentVersion + 1 }\n  const encryptedItem = await crypto.aesGcm.encryptJson(database.dbKey, itemRecord)\n\n  return { itemKey, encryptedItem }\n}\n\nconst putTransaction = async (params) => {\n  try {\n    _validateDbInput(params)\n    if (!objectHasOwnProperty(params, 'operations')) throw new errors.OperationsMissing\n\n    const { databaseName, operations } = params\n\n    if (!Array.isArray(operations)) throw new errors.OperationsMustBeArray\n\n    const database = getOpenDb(databaseName)\n\n    const action = 'BatchTransaction'\n\n    const operationParamsPromises = await Promise.all(operations.map(operation => {\n      const command = operation.command\n\n      switch (command) {\n        case 'Insert': {\n          return _buildInsertParams(database, operation)\n        }\n\n        case 'Update': {\n          return _buildUpdateParams(database, operation)\n        }\n\n        case 'Delete': {\n          return _buildDeleteParams(database, operation)\n        }\n\n        default: throw new errors.CommandNotRecognized(command)\n      }\n    }))\n    const operationParamsPromiseResults = await Promise.all(operationParamsPromises)\n\n    const operationParams = {\n      operations: operations.map((operation, i) => ({\n        command: operation.command,\n        ...operationParamsPromiseResults[i]\n      }))\n    }\n\n    try {\n      await postTransaction(database, action, operationParams)\n    } catch (e) {\n      if (e.response && e.response.data.error === 'OperationsExceedLimit') {\n        throw new errors.OperationsExceedLimit(e.response.data.limit)\n      }\n      throw e\n    }\n\n  } catch (e) {\n\n    switch (e.name) {\n      case 'ParamsMustBeObject':\n      case 'DatabaseNotOpen':\n      case 'DatabaseNameMissing':\n      case 'DatabaseNameMustBeString':\n      case 'DatabaseNameCannotBeBlank':\n      case 'DatabaseNameTooLong':\n      case 'OperationsMissing':\n      case 'OperationsMustBeArray':\n      case 'OperationsConflict':\n      case 'OperationsExceedLimit':\n      case 'CommandNotRecognized':\n      case 'ItemIdMissing':\n      case 'ItemIdMustBeString':\n      case 'ItemIdCannotBeBlank':\n      case 'ItemIdTooLong':\n      case 'ItemMissing':\n      case 'ItemInvalid':\n      case 'ItemTooLarge':\n      case 'ItemAlreadyExists':\n      case 'ItemDoesNotExist':\n      case 'ItemUpdateConflict':\n      case 'UserNotSignedIn':\n      case 'UserNotFound':\n      case 'TooManyRequests':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.UnknownServiceUnavailable(e)\n    }\n  }\n}\n\nconst postTransaction = async (database, action, params) => {\n  try {\n    const pendingTx = database.registerUnverifiedTransaction()\n\n    const paramsWithDbData = {\n      ...params,\n      dbId: database.dbId,\n      dbNameHash: ws.state.dbIdToHash[database.dbId]\n    }\n\n    const response = await ws.request(action, paramsWithDbData)\n    const seqNo = response.data.sequenceNo\n\n    await pendingTx.getResult(seqNo)\n\n    database.unregisterUnverifiedTransaction(pendingTx)\n\n    return seqNo\n  } catch (e) {\n    _parseGenericErrors(e)\n    throw e\n  }\n}\n\nconst _buildDatabaseResult = async (db) => {\n  const dbKeyString = await crypto.aesGcm.decryptString(ws.keys.encryptionKey, db.encryptedDbKey)\n  const dbKey = await crypto.aesGcm.getKeyFromKeyString(dbKeyString)\n  const databaseName = await crypto.aesGcm.decryptString(dbKey, db.databaseName)\n  return { databaseName }\n}\n\nconst getDatabases = async () => {\n  try {\n    if (!ws.keys.init) throw new errors.UserNotSignedIn\n\n    try {\n      const databases = []\n      let action = 'GetDatabases'\n      let databasesResponse = await ws.request(action)\n      let databaseResults = await Promise.all(databasesResponse.data.databases.map(db => _buildDatabaseResult(db)))\n      databases.push(...databaseResults)\n\n      while (databasesResponse.data.nextPageToken) {\n        const params = { nextPageToken: databasesResponse.data.nextPageToken }\n        databasesResponse = await ws.request(action, params)\n        databaseResults = await Promise.all(databasesResponse.data.databases.map(db => _buildDatabaseResult(db)))\n        databases.push(...databaseResults)\n      }\n\n      return { databases }\n    } catch (e) {\n      _parseGenericErrors(e)\n      throw e\n    }\n\n  } catch (e) {\n\n    switch (e.name) {\n      case 'UserNotSignedIn':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.ServiceUnavailable\n    }\n  }\n}\n\nexport default {\n  openDatabase,\n  getDatabases,\n\n  insertItem,\n  updateItem,\n  deleteItem,\n  putTransaction,\n}\n","import ws from './ws'\nimport errors from './errors'\nimport statusCodes from './statusCodes'\nimport { objectHasOwnProperty, getProtocolFromEndpoint } from './utils'\nimport config from './config'\n\nconst _parseGenericErrors = (e) => {\n  if (e.response) {\n    if (e.response.status === statusCodes['Internal Server Error']) {\n      throw new errors.InternalServerError\n    } else if (e.response.status === statusCodes['Gateway Timeout']) {\n      throw new errors.Timeout\n    }\n  } else if (e.message && e.message.includes('timeout')) {\n    throw new errors.Timeout\n  }\n}\n\nconst _validatePurchaseOrUpdate = (params) => {\n  if (ws.reconnecting) throw new errors.Reconnecting\n  if (!ws.keys.init) throw new errors.UserNotSignedIn\n\n  const stripeData = ws.userData.stripeData\n  if (!stripeData.stripeAccountId) throw new errors.StripeAccountNotConnected\n  if (stripeData.paymentsMode === 'disabled') throw new errors.PaymentsDisabled\n\n  if (!objectHasOwnProperty(window, 'Stripe')) throw new errors.StripeJsLibraryMissing\n\n  if (typeof params !== 'object') throw new errors.ParamsMustBeObject\n\n  if (!objectHasOwnProperty(params, 'successUrl')) throw new errors.SuccessUrlMissing\n  if (typeof params.successUrl !== 'string') throw new errors.SuccessUrlMustBeString\n  const successUrlProtocol = getProtocolFromEndpoint(params.successUrl)\n  if (successUrlProtocol !== 'http' && successUrlProtocol !== 'https') {\n    const invalidProtocol = true\n    throw new errors.SuccessUrlInvalid(invalidProtocol)\n  }\n\n  if (!objectHasOwnProperty(params, 'cancelUrl')) throw new errors.CancelUrlMissing\n  if (typeof params.cancelUrl !== 'string') throw new errors.CancelUrlMustBeString\n  const cancelUrlProtocol = getProtocolFromEndpoint(params.cancelUrl)\n  if (cancelUrlProtocol !== 'http' && cancelUrlProtocol !== 'https') {\n    const invalidProtocol = true\n    throw new errors.CancelUrlInvalid(invalidProtocol)\n  }\n}\n\nconst purchaseSubscription = async (params) => {\n  try {\n    const stripeData = ws.userData.stripeData\n    if (stripeData.subscriptionStatus && stripeData.subscriptionStatus !== 'canceled') {\n      throw new errors.SubscriptionPlanAlreadyPurchased\n    }\n    _validatePurchaseOrUpdate(params)\n\n    try {\n      const action = 'PurchaseSubscription'\n      const sessionIdResponse = await ws.request(action, params)\n      const stripeSessionId = sessionIdResponse.data\n\n      const stripePk = config.getStripePublishableKey(stripeData.paymentsMode === 'prod')\n\n      const result = await window\n        .Stripe(stripePk, { stripeAccount: stripeData.stripeAccountId })\n        .redirectToCheckout({ sessionId: stripeSessionId })\n\n      if (result.error) throw result.error\n\n    } catch (e) {\n      _parseGenericErrors(e)\n\n      if (e.response) {\n        if (e.response.data === 'SubscriptionPlanNotSet') {\n          throw new errors.SubscriptionPlanNotSet\n        } else if (e.response.data === 'SubscriptionPlanAlreadyPurchased') {\n          throw new errors.SubscriptionPlanAlreadyPurchased\n        } else if (e.response.data === 'SuccessUrlInvalid') {\n          throw new errors.SuccessUrlInvalid\n        } else if (e.response.data === 'CancelUrlInvalid') {\n          throw new errors.CancelUrlInvalid\n        } else if (e.response.data && e.response.data.name === 'StripeError') {\n          throw new errors.StripeError(e.response.data)\n        }\n      }\n\n      throw e\n    }\n\n  } catch (e) {\n\n    switch (e.name) {\n      case 'ParamsMustBeObject':\n      case 'SuccessUrlMissing':\n      case 'SuccessUrlMustBeString':\n      case 'SuccessUrlInvalid':\n      case 'CancelUrlMissing':\n      case 'CancelUrlMustBeString':\n      case 'CancelUrlInvalid':\n      case 'StripeError':\n      case 'StripeJsLibraryMissing':\n      case 'SubscriptionPlanNotSet':\n      case 'SubscriptionPlanAlreadyPurchased':\n      case 'StripeAccountNotConnected':\n      case 'PaymentsDisabled':\n      case 'UserNotSignedIn':\n      case 'TooManyRequests':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.UnknownServiceUnavailable(e)\n    }\n  }\n}\n\nconst _validateModifySubscriptionConditions = () => {\n  if (ws.reconnecting) throw new errors.Reconnecting\n  if (!ws.keys.init) throw new errors.UserNotSignedIn\n\n  const stripeData = ws.userData.stripeData\n  if (!stripeData.stripeAccountId) throw new errors.StripeAccountNotConnected\n  if (stripeData.paymentsMode === 'disabled') throw new errors.PaymentsDisabled\n\n  if (stripeData.subscriptionStatus === 'canceled') throw new errors.SubscriptionAlreadyCanceled\n}\n\nconst cancelSubscription = async () => {\n  try {\n    _validateModifySubscriptionConditions()\n\n    try {\n      const action = 'CancelSubscription'\n      const cancelResponse = await ws.request(action)\n      const cancelSubscriptionAt = cancelResponse.data\n\n      ws.userData.stripeData.cancelAt = cancelSubscriptionAt\n      return { cancelSubscriptionAt }\n    } catch (e) {\n      _parseGenericErrors(e)\n\n      if (e.response && e.response.data === 'SubscriptionPlanNotSet') {\n        throw new errors.SubscriptionPlanNotSet\n      }\n\n      throw e\n    }\n\n  } catch (e) {\n\n    switch (e.name) {\n      case 'SubscriptionPlanNotSet':\n      case 'StripeAccountNotConnected':\n      case 'PaymentsDisabled':\n      case 'SubscriptionAlreadyCanceled':\n      case 'UserNotSignedIn':\n      case 'TooManyRequests':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.UnknownServiceUnavailable(e)\n    }\n  }\n}\n\nconst resumeSubscription = async () => {\n  try {\n    _validateModifySubscriptionConditions()\n\n    try {\n      const action = 'ResumeSubscription'\n      await ws.request(action)\n\n      delete ws.userData.stripeData.cancelAt\n    } catch (e) {\n      _parseGenericErrors(e)\n\n      if (e.response && e.response.data === 'SubscriptionPlanNotSet') {\n        throw new errors.SubscriptionPlanNotSet\n      }\n\n      throw e\n    }\n\n  } catch (e) {\n\n    switch (e.name) {\n      case 'SubscriptionPlanNotSet':\n      case 'StripeAccountNotConnected':\n      case 'PaymentsDisabled':\n      case 'SubscriptionAlreadyCanceled':\n      case 'UserNotSignedIn':\n      case 'TooManyRequests':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.UnknownServiceUnavailable(e)\n    }\n  }\n}\n\nconst updatePaymentMethod = async (params) => {\n  try {\n    _validatePurchaseOrUpdate(params)\n\n    const stripeData = ws.userData.stripeData\n    if (!stripeData.subscriptionStatus) throw new errors.SubscriptionNotPurchased\n\n    try {\n      const action = 'UpdatePaymentMethod'\n      const sessionIdResponse = await ws.request(action, params)\n      const stripeSessionId = sessionIdResponse.data\n\n      const stripePk = config.getStripePublishableKey(stripeData.paymentsMode === 'prod')\n\n      const result = await window\n        .Stripe(stripePk, { stripeAccount: stripeData.stripeAccountId })\n        .redirectToCheckout({ sessionId: stripeSessionId })\n\n      if (result.error) throw result.error\n\n    } catch (e) {\n      _parseGenericErrors(e)\n\n      if (e.response) {\n        if (e.response.data === 'SuccessUrlInvalid') {\n          throw new errors.SuccessUrlInvalid\n        } else if (e.response.data === 'CancelUrlInvalid') {\n          throw new errors.CancelUrlInvalid\n        }\n      }\n\n      throw e\n    }\n\n  } catch (e) {\n\n    switch (e.name) {\n      case 'ParamsMustBeObject':\n      case 'SuccessUrlMissing':\n      case 'SuccessUrlMustBeString':\n      case 'SuccessUrlInvalid':\n      case 'CancelUrlMissing':\n      case 'CancelUrlMustBeString':\n      case 'CancelUrlInvalid':\n      case 'StripeJsLibraryMissing':\n      case 'SubscriptionNotPurchased':\n      case 'StripeAccountNotConnected':\n      case 'PaymentsDisabled':\n      case 'UserNotSignedIn':\n      case 'TooManyRequests':\n      case 'ServiceUnavailable':\n        throw e\n\n      default:\n        throw new errors.UnknownServiceUnavailable(e)\n    }\n  }\n}\n\nexport default {\n  purchaseSubscription,\n  cancelSubscription,\n  resumeSubscription,\n  updatePaymentMethod,\n}\n","import auth from './auth'\nimport db from './db'\nimport payments from './payments'\n\nexport default {\n  init: auth.init,\n\n  signUp: auth.signUp,\n  signIn: auth.signIn,\n  signOut: auth.signOut,\n  updateUser: auth.updateUser,\n  deleteUser: auth.deleteUser,\n  forgotPassword: auth.forgotPassword,\n\n  openDatabase: db.openDatabase,\n  getDatabases: db.getDatabases,\n\n  insertItem: db.insertItem,\n  updateItem: db.updateItem,\n  deleteItem: db.deleteItem,\n  putTransaction: db.putTransaction,\n\n  purchaseSubscription: payments.purchaseSubscription,\n  cancelSubscription: payments.cancelSubscription,\n  resumeSubscription: payments.resumeSubscription,\n  updatePaymentMethod: payments.updatePaymentMethod,\n}\n"],"sourceRoot":""}